{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport '../../Sass/editbox.scss';\nimport { useState } from 'react';\nimport { Select, TimePicker } from 'antd';\nimport ImagePreview from '../../../../components/ImagePreview'; // import '../../../../styles/AutoComplete.scss';\n\nimport moment from 'moment';\nimport Fields from '../../../../components/Data/Fields';\nimport Jobs from '../../../../components/Data/Jobs';\nimport Cities from '../../../../components/Data/Cities'; //  --------------\n\nconst EditBox = ({\n  data,\n  setData,\n  DiplomeList,\n  setDiplomeList,\n  setfire\n}) => {\n  // States --------------------------------------------------------\n  const Moments = [];\n\n  if (data.horraire !== undefined) {\n    Moments.push(moment(data.horraire[0], 'HH:mm'), moment(data.horraire[1], 'HH:mm'));\n  }\n\n  const {\n    RangePicker\n  } = TimePicker;\n  const {\n    Option\n  } = Select;\n  const {\n    0: time,\n    1: setTime\n  } = useState(Moments);\n  const Languages = [\"Arabe\", \"Francais\", \"Anglais\", \"Spanish\"];\n  const lang = [];\n  const children = [];\n  const {\n    0: changed,\n    1: setchanged\n  } = useState(false);\n  const {\n    0: file,\n    1: setFile\n  } = useState(data.Usrimg);\n  const {\n    0: visible,\n    1: setvisible\n  } = useState(false); // Mappers -------------------------------------------------------\n\n  Languages.map(Field => {\n    lang.push(__jsx(Option, {\n      key: Field\n    }, Field));\n  });\n  Fields.map(Field => {\n    children.push(__jsx(Option, {\n      key: Field\n    }, Field));\n  }); // Handlers --------------------------------------------------------\n\n  const handleImageChange = e => {\n    setchanged(true);\n\n    if (e.target.files[0] !== undefined) {\n      try {\n        setfire(e.target.files[0]);\n        const url = URL.createObjectURL(e.target.files[0]);\n        setFile(url);\n      } catch (error) {\n        console.error(error);\n        alert(error);\n      }\n    }\n  }; // ------------------------------------------------\n  // When click on delete picture \n\n\n  const handleClick = () => {\n    URL.revokeObjectURL(file);\n    setFile(data.Usrimg);\n    setchanged(false);\n  }; // When diplome change value --------------------------\n  // ---------------\n\n\n  const dipChange = (e, index) => {\n    const {\n      name,\n      value\n    } = e.target;\n    const list = [...DiplomeList];\n    list[index][name] = value;\n    setDiplomeList(list);\n  }; // WHen add a diplomaa --------------------------------\n\n\n  const handleAddClick = () => {\n    setDiplomeList([...DiplomeList, {\n      diplomeName: \"\",\n      desc: \"\"\n    }]);\n  }; // handle click event of the Remove button\n\n\n  const handleRemoveClick = index => {\n    const list = [...DiplomeList];\n    list.splice(index, 1);\n    setDiplomeList(list);\n  }; // Languages on change handler ----------------------------\n\n\n  const handleLang = value => {\n    const string = value;\n    setData(_objectSpread(_objectSpread({}, data), {}, {\n      languages: string\n    }));\n  }; // Domaine handler ----------------------------------------\n\n\n  const handleTag = value => {\n    const string = value;\n    setData(_objectSpread(_objectSpread({}, data), {}, {\n      domaine: string\n    }));\n  }; // When chage of time handler --------------------------------\n\n\n  const handleTime = (time, timestring) => {\n    const string = timestring;\n    setData(_objectSpread(_objectSpread({}, data), {}, {\n      horraire: string\n    }));\n    setTime(time);\n  }; // Handler when input value change \n\n\n  const handleChange = event => {\n    const name = event.target.name;\n    const value = event.target.value;\n    setData(_objectSpread(_objectSpread({}, data), {}, {\n      [name]: value\n    }));\n  };\n\n  return __jsx(\"div\", {\n    className: \"EditBox\"\n  }, __jsx(\"div\", {\n    className: \"ProfileImg\"\n  }, __jsx(\"img\", {\n    className: \"img\",\n    src: file,\n    onClick: () => setvisible(true)\n  }), __jsx(\"br\", null), __jsx(\"div\", null, __jsx(\"label\", {\n    className: \"custom-file-upload\"\n  }, __jsx(\"input\", {\n    type: \"file\",\n    id: \"img\",\n    name: \"img\",\n    placeholder: \"Choisissez photo\",\n    accept: \"image/*\",\n    onChange: handleImageChange\n  }), __jsx(\"i\", {\n    className: \"fa fa-upload\",\n    \"aria-hidden\": \"true\"\n  }), \"   Ajouter photo\"), changed && __jsx(\"label\", {\n    className: \"Showmodal\",\n    onClick: handleClick\n  }, __jsx(\"i\", {\n    className: \"fa fa-user-times\",\n    style: {\n      color: '#be0000'\n    }\n  }))), visible && __jsx(ImagePreview, {\n    image: file,\n    handleClick: () => setvisible(false)\n  })), __jsx(\"div\", {\n    className: \"multipleInput\"\n  }, __jsx(\"input\", {\n    className: \"input controlled user\",\n    type: \"text\",\n    placeholder: \"Nom\",\n    name: \"nom\",\n    value: data.nom,\n    onChange: handleChange\n  }), __jsx(\"input\", {\n    className: \"input controlled user\",\n    type: \"text\",\n    placeholder: \"Prenom\",\n    name: \"prenom\",\n    value: data.prenom,\n    onChange: handleChange\n  })), data.type === \"Société\" && __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"multipleInput\"\n  }, __jsx(\"select\", {\n    className: \"title\",\n    name: \"title\",\n    value: data.title,\n    onChange: handleChange,\n    required: true\n  }, Jobs.map(job => __jsx(\"option\", {\n    value: job,\n    key: job\n  }, job))), __jsx(\"input\", {\n    className: \"input\",\n    type: \"text\",\n    placeholder: \"Nom de soci\\xE9t\\xE9\",\n    name: \"companyname\",\n    value: data.companyname,\n    onChange: handleChange\n  })), __jsx(Select, {\n    mode: \"tags\",\n    style: {\n      width: '100%',\n      marginTop: '20px'\n    },\n    placeholder: \"Votre domaine \",\n    maxTagCount: 3,\n    onChange: handleTag,\n    value: data.domaine\n  }, children), __jsx(\"label\", {\n    style: {\n      color: '#318CE7',\n      fontFamily: 'GlacialBold',\n      fontSize: '16px'\n    }\n  }, \"L'horraire de votre soci\\xE9t\\xE9 : \"), __jsx(RangePicker, {\n    bordered: false,\n    format: \"HH:mm\",\n    minuteStep: 30,\n    value: time,\n    onChange: handleTime\n  }), __jsx(\"br\", null), __jsx(\"br\", null)), __jsx(\"div\", {\n    className: \"multipleInput\",\n    placeholder: \"Titre\",\n    style: {\n      marginBottom: '10px'\n    }\n  }, __jsx(\"select\", {\n    className: \"title\",\n    name: \"city\"\n  }, Cities.map(citie => __jsx(\"option\", {\n    value: citie,\n    key: citie\n  }, citie))), __jsx(\"input\", {\n    className: \"input\",\n    type: \"text\",\n    placeholder: \"Addresse\",\n    name: \"addresse\",\n    value: data.addresse,\n    onChange: handleChange\n  })), __jsx(\"label\", {\n    style: {\n      color: '#2a2a2a',\n      fontFamily: 'GlacialBold',\n      fontSize: '16px'\n    }\n  }, \"Presentation\"), __jsx(\"br\", null), __jsx(\"textarea\", {\n    className: \"textArea\",\n    name: \"presentation\",\n    placeholder: data.type !== \"Société\" ? \"Parlez-nous de vous (optionnel)\" : \"Décrivez votre entreprise\",\n    rows: \"4\",\n    value: data.presentation,\n    onChange: handleChange\n  }), __jsx(\"br\", null), __jsx(\"br\", null), __jsx(\"label\", {\n    style: {\n      color: '#2a2a2a',\n      fontFamily: 'GlacialBold',\n      fontSize: '16px'\n    }\n  }, \"Langues parl\\xE9s\"), __jsx(Select, {\n    mode: \"tags\",\n    style: {\n      width: '100%',\n      borderRadius: '10px',\n      marginTop: '5px',\n      backgroundColor: '#e9f1fa'\n    },\n    placeholder: \"Ex: Francais , arabe ...\",\n    onChange: handleLang,\n    value: data.languages,\n    maxTagCount: 3\n  }, lang), __jsx(\"br\", null), __jsx(\"br\", null), __jsx(\"label\", {\n    style: {\n      color: '#2a2a2a',\n      fontFamily: 'GlacialBold',\n      fontSize: '16px'\n    }\n  }, \"Dipl\\xF4me et formations\"), __jsx(\"div\", {\n    className: \"Diplomes\"\n  }, DiplomeList.map((element, index) => __jsx(\"div\", {\n    className: \"container\",\n    key: index\n  }, __jsx(\"input\", {\n    className: \"input diplome\",\n    type: \"text\",\n    name: \"diplomeName\",\n    placeholder: \"Votre Diplome\",\n    value: element.diplomeName,\n    onChange: e => dipChange(e, index)\n  }), __jsx(\"input\", {\n    className: index !== 0 ? \"input desc2\" : \"input desc\",\n    type: \"text\",\n    name: \"desc\",\n    placeholder: \"Br\\xE8ve description\",\n    value: element.desc,\n    onChange: e => dipChange(e, index)\n  }), index !== 0 && __jsx(\"label\", {\n    className: \"delete\",\n    onClick: () => handleRemoveClick(index)\n  }, __jsx(\"i\", {\n    class: \"fa fa-trash\",\n    \"aria-hidden\": \"true\",\n    style: {\n      color: '#be0000'\n    }\n  })))), __jsx(\"div\", {\n    className: \"container \"\n  }, __jsx(\"button\", {\n    onClick: handleAddClick,\n    className: \"ajouter\"\n  }, \"Ajouter\"))));\n};\n\nexport default EditBox;","map":null,"metadata":{},"sourceType":"module"}