{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Noumane agouzil\\\\Desktop\\\\Normane\\\\My projects\\\\PfeProject\\\\Front-End\\\\pages\\\\Profiles\\\\[_id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Head from '../../components/head';\nimport Header from '../../components/header';\nimport { useState, useEffect } from 'react';\nimport { Spin } from 'antd';\nimport PublicProfile from './Components/publicProfile';\nimport ErrorPage from 'next/error';\n\nconst Profile = props => {\n  const {\n    0: userid,\n    1: setData\n  } = useState();\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(true);\n  useEffect(() => {\n    if (props.statusCode === 401) {\n      const location = \"/Auth/Signin/?ref=tokenexpired&location=\" + window.location.href;\n      window.location.replace(location);\n    } else {\n      props.statusCode !== 404 ? setData(AuthId) : \"\";\n      setLoading(false);\n    }\n\n    console.log(props);\n  }, []);\n\n  if (props.statusCode === 404) {\n    return __jsx(ErrorPage, {\n      statusCode: props.statusCode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 16\n      }\n    });\n  }\n\n  if (loading) {\n    return __jsx(React.Fragment, null, __jsx(Head, {\n      title: \"Loading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }\n    }), __jsx(\"div\", {\n      style: {\n        position: 'fixed',\n        top: '50%',\n        left: '50%',\n        marginTop: '-50px',\n        marginLeft: '-50px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    }, __jsx(Spin, {\n      size: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }\n    })));\n  } else {\n    return __jsx(\"div\", {\n      className: \"body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }, __jsx(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }\n    }), props.data === undefined ? __jsx(Head, {\n      title: \"Loading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 49\n      }\n    }) : '', __jsx(\"div\", {\n      style: {\n        marginTop: '8%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }\n    }, props.data !== undefined && __jsx(PublicProfile, {\n      profile: props.data.profile,\n      userid: userid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 29\n      }\n    })));\n  }\n};\n\nexport const getServerSideProps = async ctx => {\n  try {\n    const cookie = ctx.req.headers.cookie;\n    var statusCode = '';\n    var AuthId = '';\n    const res = await fetch('http://localhost:9000/profiles/myprofile', {\n      headers: {\n        cookie\n      }\n    });\n    var data = await res.json();\n    data.profile !== undefined ? AuthId = data.profile._id : \"\";\n\n    if (ctx.query._id !== 'Myprofile' && ctx.query._id !== AuthId && data.profile !== undefined) {\n      const url = \"http://localhost:9000/profiles/profile?userid=\" + ctx.query._id;\n      const res = await fetch(url, {\n        headers: {\n          cookie\n        }\n      });\n      statusCode = res.status;\n      data = await res.json();\n    }\n\n    if (statusCode !== 200) {\n      throw statusCode;\n    }\n\n    return {\n      props: {\n        data\n      } // AuthId : AuthId\n\n    };\n  } catch (error) {\n    ctx.res.statusCode = error;\n    return {\n      props: {\n        statusCode: error\n      }\n    };\n  }\n};\nexport default Profile;","map":{"version":3,"sources":["C:/Users/Noumane agouzil/Desktop/Normane/My projects/PfeProject/Front-End/pages/Profiles/[_id].js"],"names":["Head","Header","useState","useEffect","Spin","PublicProfile","ErrorPage","Profile","props","userid","setData","loading","setLoading","statusCode","location","window","href","replace","AuthId","console","log","position","top","left","marginTop","marginLeft","data","undefined","profile","getServerSideProps","ctx","cookie","req","headers","res","fetch","json","_id","query","url","status","error"],"mappings":"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","sourcesContent":["import Head from '../../components/head';\r\nimport Header from '../../components/header'\r\nimport {useState , useEffect} from 'react';\r\nimport {Spin } from 'antd';\r\nimport PublicProfile from './Components/publicProfile';\r\nimport ErrorPage from 'next/error';\r\nconst Profile = (props)=>{\r\n\r\n    const [userid,setData] = useState();\r\n    const [loading,setLoading] = useState(true);\r\n    useEffect(()=>{\r\n        if (props.statusCode === 401) {\r\n            const location = \"/Auth/Signin/?ref=tokenexpired&location=\"+window.location.href;\r\n            window.location.replace(location);\r\n        }else{\r\n            props.statusCode !== 404 ? setData(AuthId) : \"\";\r\n            setLoading(false);\r\n        }\r\n        console.log(props);\r\n    },[])\r\n    if (props.statusCode === 404) {\r\n        return <ErrorPage statusCode={props.statusCode} />\r\n    }\r\n    if (loading ) {\r\n        \r\n        return(\r\n        <>\r\n                <Head title=\"Loading\"/>\r\n                <div style={{position : 'fixed',top : '50%',left:'50%',marginTop :'-50px',marginLeft:'-50px'}}>\r\n                    <Spin size=\"large\" />\r\n                </div>\r\n        </>\r\n        )\r\n    }else{\r\n        return(\r\n            <div className=\"body\">\r\n                    <Header/>\r\n                    {props.data === undefined ? <Head title=\"Loading\"/> :''}\r\n                    <div style={{marginTop :'8%'}}>\r\n                        { props.data !== undefined && (\r\n                            <PublicProfile profile={props.data.profile} userid={userid} />\r\n                        )}  \r\n                    </div>\r\n            </div>\r\n        )        \r\n    }\r\n    \r\n}\r\n\r\n\r\nexport const getServerSideProps = async (ctx) => {\r\n    try {\r\n        const cookie = ctx.req.headers.cookie ;\r\n        var statusCode = '';\r\n        var AuthId='';\r\n        const res = await fetch('http://localhost:9000/profiles/myprofile',{\r\n            headers : {\r\n                cookie\r\n            }\r\n        });\r\n        var data = await res.json();\r\n        data.profile !== undefined ? AuthId = data.profile._id  : \"\" ;\r\n\r\n        if (ctx.query._id !== 'Myprofile' && ctx.query._id !== AuthId && data.profile !== undefined ) {\r\n            const url = \"http://localhost:9000/profiles/profile?userid=\"+ctx.query._id ;\r\n            const res = await fetch(url,{\r\n                headers : {\r\n                    cookie\r\n                }\r\n            }); \r\n            statusCode = res.status;\r\n            data = await res.json();\r\n        }\r\n        if (statusCode !== 200) {\r\n            throw statusCode \r\n        }\r\n            return{\r\n            props : {\r\n                data\r\n            }\r\n            // AuthId : AuthId\r\n        }\r\n    } catch (error) {\r\n        ctx.res.statusCode = error;\r\n        return {\r\n               props : {statusCode : error}\r\n              };\r\n    }\r\n  }\r\n\r\nexport default Profile ;"]},"metadata":{},"sourceType":"module"}