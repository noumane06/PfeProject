{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Noumane agouzil\\\\Desktop\\\\Normane\\\\My projects\\\\PfeProject\\\\Front-End\\\\pages\\\\test\\\\index.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport './style.scss';\nimport Modal from 'antd/lib/modal/Modal';\nimport { useState } from 'react';\nimport moment from 'moment';\nimport '../../styles/ant-picker.scss';\n\nconst calendar = () => {\n  //Data from database \n  const Booked = ['08:00-10:00', '10:00-11:00'];\n  const Horraire = ['09:15', '17:30'];\n  const StartHour = moment(Horraire[0], \"HH:mm\");\n  const endtHour = moment(Horraire[1], \"HH:mm\");\n  const length = (endtHour.format(\"HH\") - StartHour.format(\"HH\")) * 60 / 45;\n  const results = [];\n\n  for (let i = 0; i <= parseInt(length); i++) {\n    const string = StartHour.format('HH:mm') + \"-\" + StartHour.add(30, 'minutes').format('HH:mm'); // Break betweeen meetings\n\n    console.log(moment.duration(StartHour.diff(endtHour))); // if (Math.abs(moment.duration(StartHour.diff(endtHour)).asMinutes()) < 15 ) {\n    //     break ;\n    // }\n\n    results.push(string);\n    StartHour.add(15, 'minutes');\n  }\n\n  console.log(results); // States -------------------\n\n  const {\n    0: visible,\n    1: setvisible\n  } = useState(false);\n  const {\n    0: title,\n    1: setTitle\n  } = useState(); // -----------------------\n\n  const Days = ['Lundi', 'Mardi', 'Mercredi', 'Jeudi', 'Vendredi', 'Samedi', 'Dimanche'];\n  const Hours = ['08:00-10:00', '10:00-11:00', '11:00-12:00', '12:00-13:00', '13:00-14:00', '14:00-15:00', '15:00-16:00'];\n  return __jsx(\"table\", {\n    id: \"customers\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, __jsx(Modal, {\n    title: `${title} | Entrez votre message`,\n    visible: visible,\n    width: \"50vw\",\n    onCancel: () => setvisible(false),\n    footer: null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, \"Hello\"), __jsx(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, __jsx(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  }), Days.map(day => __jsx(\"th\", {\n    key: day + Date.now(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 38\n    }\n  }, day)))), __jsx(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, Hours.map(hour => __jsx(\"tr\", {\n    key: hour + Date.now(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }, __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 25\n    }\n  }, hour), Days.map(day => __jsx(\"td\", {\n    key: day + hour,\n    onClick: () => {\n      setTitle(hour + day);\n      setvisible(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 25\n    }\n  }))))));\n};\n\nexport default calendar;","map":{"version":3,"sources":["C:/Users/Noumane agouzil/Desktop/Normane/My projects/PfeProject/Front-End/pages/test/index.jsx"],"names":["Modal","useState","moment","calendar","Booked","Horraire","StartHour","endtHour","length","format","results","i","parseInt","string","add","console","log","duration","diff","push","visible","setvisible","title","setTitle","Days","Hours","map","day","Date","now","hour"],"mappings":"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","sourcesContent":["import './style.scss';\r\nimport Modal from 'antd/lib/modal/Modal';\r\nimport {useState} from 'react';\r\nimport moment from 'moment';\r\nimport '../../styles/ant-picker.scss'\r\nconst calendar = ()=>{\r\n\r\n    //Data from database \r\n    const Booked = ['08:00-10:00','10:00-11:00'];\r\n    const Horraire = ['09:15','17:30'];\r\n    const StartHour = moment(Horraire[0],\"HH:mm\");\r\n    const endtHour = moment(Horraire[1],\"HH:mm\");\r\n    const length = (endtHour.format(\"HH\")-StartHour.format(\"HH\"))*60/45;\r\n    const results = [];\r\n    for (let i = 0; i <= parseInt(length) ; i++) {\r\n        const string  = StartHour.format('HH:mm')+\"-\"+StartHour.add(30,'minutes').format('HH:mm') ;\r\n\r\n        // Break betweeen meetings\r\n        console.log(moment.duration(StartHour.diff(endtHour)));\r\n        // if (Math.abs(moment.duration(StartHour.diff(endtHour)).asMinutes()) < 15 ) {\r\n        //     break ;\r\n        // }\r\n        results.push(string);\r\n        StartHour.add(15,'minutes');\r\n        \r\n    }\r\n    console.log(results);\r\n    // States -------------------\r\n    const [visible,setvisible] = useState(false);\r\n    const [title , setTitle] = useState();\r\n\r\n    // -----------------------\r\n    const Days = ['Lundi','Mardi','Mercredi','Jeudi','Vendredi','Samedi','Dimanche'];\r\n    const Hours = ['08:00-10:00','10:00-11:00','11:00-12:00','12:00-13:00','13:00-14:00','14:00-15:00','15:00-16:00'];\r\n    return(\r\n        <table id=\"customers\">\r\n            <Modal title={`${title} | Entrez votre message`} visible={visible} width=\"50vw\" onCancel={()=>setvisible(false)} footer={null}>Hello</Modal>\r\n            <thead>\r\n                <tr>\r\n                    <th></th>\r\n                    {Days.map(day =>(<th key={day+Date.now()} >{day}</th>))}\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {Hours.map(hour => (\r\n                    <tr key={hour+Date.now()}> \r\n                        <th>{hour}</th>\r\n                        {Days.map(day =>(\r\n                        <td key={day+hour} onClick={()=>{setTitle(hour+day); setvisible(true)}}>\r\n                        \r\n                        </td>))}\r\n                    </tr>\r\n                ))}\r\n            </tbody>\r\n            \r\n        </table>\r\n    )\r\n}\r\nexport default calendar ;"]},"metadata":{},"sourceType":"module"}