{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport firebase from '../../../components/firebase-config';\n\nrequire('firebase/auth');\n\nclass Captcha extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"LoadCaptcha\", () => {\n      firebase.auth().languageCode = 'en';\n      let comp = this;\n      window.recaptchaVerifier = new firebase.auth.RecaptchaVerifier('recaptcha', {\n        'size': 'normal',\n        'callback': function (response) {\n          comp.props.handler(true);\n          console.log(response);\n        },\n        'expired-callback': function () {\n          comp.props.handler(false);\n          console.log(\"expired\");\n        }\n      });\n      window.recaptchaVerifier.render().then(function (WidgetID) {\n        window.recaptchaWidgetId = WidgetID;\n      });\n    });\n\n    this.LoadCaptcha = this.LoadCaptcha.bind(this);\n  }\n\n  componentDidMount() {\n    if (document.readyState === 'complete') {\n      this.LoadCaptcha();\n    } else {\n      window.onload = this.loadRecaptcha;\n    }\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      className: \"text-center\"\n    }, __jsx(\"div\", {\n      id: \"recaptcha\"\n    }));\n  }\n\n}\n\nexport default Captcha;","map":null,"metadata":{},"sourceType":"module"}