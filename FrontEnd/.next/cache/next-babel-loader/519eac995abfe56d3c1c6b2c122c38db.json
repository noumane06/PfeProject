{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Noumane agouzil\\\\Desktop\\\\Normane\\\\My projects\\\\PfeProject\\\\Front-End\\\\pages\\\\Profiles\\\\[_id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Head from '../../components/head';\nimport Header from '../../components/header';\nimport { useState, useEffect } from 'react';\nimport { Spin } from 'antd';\nimport jwt from 'jsonwebtoken';\nimport PublicProfile from './Components/publicProfile';\n\nconst Profile = ({\n  props,\n  userId\n}) => {\n  const {\n    0: userid,\n    1: setData\n  } = useState();\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(true);\n  useEffect(() => {\n    if (props.data.profile !== undefined) {\n      setData(userId);\n      setLoading(false);\n    } else {\n      console.log(props.data.error);\n      const location = \"/Auth/Signin/?ref=tokenexpired&location=\" + window.location.href;\n      window.location.replace(location);\n    }\n  }, []);\n\n  if (loading) {\n    return __jsx(React.Fragment, null, __jsx(Head, {\n      title: \"Loading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }\n    }), __jsx(\"div\", {\n      style: {\n        position: 'fixed',\n        top: '50%',\n        left: '50%',\n        marginTop: '-50px',\n        marginLeft: '-50px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    }, __jsx(Spin, {\n      size: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }\n    })));\n  } else {\n    return __jsx(\"div\", {\n      className: \"body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }, __jsx(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }\n    }), props.data === undefined ? __jsx(Head, {\n      title: \"Loading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 49\n      }\n    }) : '', __jsx(\"div\", {\n      style: {\n        marginTop: '8%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }\n    }, props.data !== undefined && __jsx(PublicProfile, {\n      profile: props.data.profile[0],\n      userid: userid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 29\n      }\n    })));\n  }\n};\n\nProfile.getInitialProps = async ctx => {\n  // if (ctx.query._id === 'Myprofile') {\n  //     const res = await fetch('http://localhost:9000/profiles/myprofile',{credentials : 'include'});\n  //     const data = await res.json();\n  //     return{\n  //         props : {\n  //             data\n  //         },\n  //         AuthUserId : data.profile._id ,\n  //         ctx : ctx.query._id\n  //     }\n  // } else {\n  //     const url = \"http://localhost:9000/profiles/profile?userid=\"+ctx.query._id ;\n  //     const res = await fetch(url);\n  //     const data = await res.json();\n  //     return{\n  //         props : {\n  //             data\n  //         },\n  //         userId : ctx.query._id \n  //     }\n  // }\n  const cookie = ctx.req.headers.cookie;\n  const res = await fetch('http://localhost:9000/profiles/myprofile', {\n    headers: {\n      cookie\n    }\n  });\n  const data = await res.json();\n  return {\n    props: {\n      data\n    }\n  };\n};\n\nexport default Profile;","map":{"version":3,"sources":["C:/Users/Noumane agouzil/Desktop/Normane/My projects/PfeProject/Front-End/pages/Profiles/[_id].js"],"names":["Head","Header","useState","useEffect","Spin","jwt","PublicProfile","Profile","props","userId","userid","setData","loading","setLoading","data","profile","undefined","console","log","error","location","window","href","replace","position","top","left","marginTop","marginLeft","getInitialProps","ctx","cookie","req","headers","res","fetch","json"],"mappings":"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","sourcesContent":["import Head from '../../components/head';\r\nimport Header from '../../components/header'\r\nimport {useState , useEffect} from 'react';\r\nimport {Spin } from 'antd';\r\nimport jwt from 'jsonwebtoken';\r\nimport PublicProfile from './Components/publicProfile';\r\n\r\nconst Profile = ({props , userId})=>{\r\n\r\n    const [userid,setData] = useState();\r\n    const [loading,setLoading] = useState(true);\r\n\r\n    useEffect(()=>{\r\n        if (props.data.profile !== undefined ) {\r\n            setData(userId);\r\n            setLoading(false);\r\n        }else{\r\n            console.log(props.data.error)\r\n            const location = \"/Auth/Signin/?ref=tokenexpired&location=\"+window.location.href;\r\n            window.location.replace(location);\r\n        }\r\n        \r\n    },[])\r\n    if (loading ) {\r\n        \r\n        return(\r\n        <>\r\n                <Head title=\"Loading\"/>\r\n                <div style={{position : 'fixed',top : '50%',left:'50%',marginTop :'-50px',marginLeft:'-50px'}}>\r\n                    <Spin size=\"large\" />\r\n                </div>\r\n        </>\r\n        )\r\n    }else{\r\n        return(\r\n            <div className=\"body\">\r\n                    <Header/>\r\n                    {props.data === undefined ? <Head title=\"Loading\"/> :''}\r\n                    <div style={{marginTop :'8%'}}>\r\n                        { props.data !== undefined && (\r\n                            <PublicProfile profile={props.data.profile[0]} userid={userid} />\r\n                        )}  \r\n                    </div>\r\n            </div>\r\n        )        \r\n    }\r\n    \r\n}\r\n\r\n\r\nProfile.getInitialProps = async (ctx) => {\r\n\r\n    // if (ctx.query._id === 'Myprofile') {\r\n    //     const res = await fetch('http://localhost:9000/profiles/myprofile',{credentials : 'include'});\r\n    //     const data = await res.json();\r\n    //     return{\r\n    //         props : {\r\n    //             data\r\n    //         },\r\n    //         AuthUserId : data.profile._id ,\r\n    //         ctx : ctx.query._id\r\n    //     }\r\n    // } else {\r\n    //     const url = \"http://localhost:9000/profiles/profile?userid=\"+ctx.query._id ;\r\n    //     const res = await fetch(url);\r\n    //     const data = await res.json();\r\n    //     return{\r\n    //         props : {\r\n    //             data\r\n    //         },\r\n    //         userId : ctx.query._id \r\n    //     }\r\n    // }\r\n    const cookie = ctx.req.headers.cookie ;\r\n    const res = await fetch('http://localhost:9000/profiles/myprofile',{\r\n        headers : {\r\n            cookie\r\n        }\r\n    });\r\n    const data = await res.json();\r\n    return{\r\n        props : {\r\n            data\r\n        }\r\n    }\r\n  }\r\n\r\nexport default Profile ;"]},"metadata":{},"sourceType":"module"}