{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Noumane agouzil\\\\Desktop\\\\Normane\\\\My projects\\\\PfeProject\\\\Front-End\\\\pages\\\\test\\\\index.js\";\n\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { withStyles } from '@material-ui/core/styles';\nimport moment from 'moment';\nimport { ViewState } from '@devexpress/dx-react-scheduler';\nimport { Scheduler, WeekView, DayView, Appointments, Toolbar, DateNavigator, ViewSwitcher, AppointmentForm, AppointmentTooltip, TodayButton } from '@devexpress/dx-react-scheduler-material-ui';\nvar URL = 'https://js.devexpress.com/Demos/Mvc/api/SchedulerData/Get';\n\nvar makeQueryString = function makeQueryString(currentDate, currentViewName) {\n  var format = 'YYYY-MM-DDTHH:mm:ss';\n  var start = moment(currentDate).startOf(currentViewName.toLowerCase());\n  var end = start.clone().endOf(currentViewName.toLowerCase());\n  return encodeURI(\"\".concat(URL, \"?filter=[[\\\"EndDate\\\", \\\">\\\", \\\"\").concat(start.format(format), \"\\\"],[\\\"StartDate\\\", \\\"<\\\", \\\"\").concat(end.format(format), \"\\\"]]\"));\n};\n\nvar styles = {\n  toolbarRoot: {\n    position: 'relative'\n  },\n  progress: {\n    position: 'absolute',\n    width: '100%',\n    bottom: 0,\n    left: 0\n  }\n};\nvar ToolbarWithLoading = withStyles(styles, {\n  name: 'Toolbar'\n})(function (_ref) {\n  var children = _ref.children,\n      classes = _ref.classes,\n      restProps = _objectWithoutProperties(_ref, [\"children\", \"classes\"]);\n\n  return __jsx(\"div\", {\n    className: classes.toolbarRoot,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, __jsx(Toolbar.Root, _extends({}, restProps, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }), children), __jsx(LinearProgress, {\n    className: classes.progress,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }));\n});\n\nvar mapAppointmentData = function mapAppointmentData(appointment) {\n  return _objectSpread(_objectSpread({}, appointment), {}, {\n    startDate: appointment.StartDate,\n    endDate: appointment.EndDate,\n    title: appointment.Text\n  });\n};\n\nvar Demo = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(Demo, _React$PureComponent);\n\n  var _super = _createSuper(Demo);\n\n  function Demo(props) {\n    var _this2;\n\n    _classCallCheck(this, Demo);\n\n    _this2 = _super.call(this, props);\n    _this2.state = {\n      loading: true,\n      currentDate: '2017-05-23',\n      currentViewName: 'Day'\n    };\n    _this2.loadData = _this2.loadData.bind(_assertThisInitialized(_this2));\n\n    _this2.currentViewNameChange = function (currentViewName) {\n      _this2.setState({\n        currentViewName: currentViewName,\n        loading: true\n      });\n    };\n\n    _this2.currentDateChange = function (currentDate) {\n      _this2.setState({\n        currentDate: currentDate,\n        loading: true\n      });\n    };\n\n    return _this2;\n  }\n\n  _createClass(Demo, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadData();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.loadData();\n    }\n  }, {\n    key: \"loadData\",\n    value: function loadData() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          currentDate = _this$state.currentDate,\n          currentViewName = _this$state.currentViewName;\n      var queryString = makeQueryString(currentDate, currentViewName);\n\n      if (queryString === this.lastQuery) {\n        this.setState({\n          loading: false\n        });\n        return;\n      }\n\n      fetch(queryString).then(function (response) {\n        return response.json();\n      }).then(function (_ref2) {\n        var data = _ref2.data;\n        setTimeout(function () {\n          _this3.setState({\n            data: data,\n            loading: false\n          });\n        }, 600);\n      })[\"catch\"](function () {\n        return _this3.setState({\n          loading: false\n        });\n      });\n      this.lastQuery = queryString;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          data = _this$state2.data,\n          loading = _this$state2.loading,\n          currentDate = _this$state2.currentDate,\n          currentViewName = _this$state2.currentViewName;\n      var formattedData = data ? data.map(mapAppointmentData) : [];\n      return __jsx(Paper, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 7\n        }\n      }, __jsx(Scheduler, {\n        data: formattedData,\n        height: 660,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 9\n        }\n      }, __jsx(ViewState, {\n        currentDate: currentDate,\n        currentViewName: currentViewName,\n        onCurrentViewNameChange: this.currentViewNameChange,\n        onCurrentDateChange: this.currentDateChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }\n      }), __jsx(DayView, {\n        startDayHour: 9,\n        endDayHour: 18,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }\n      }), __jsx(WeekView, {\n        startDayHour: 9,\n        endDayHour: 18,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }\n      }), __jsx(Appointments, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }\n      }), __jsx(Toolbar, _extends({}, loading ? {\n        rootComponent: ToolbarWithLoading\n      } : null, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }\n      })), __jsx(DateNavigator, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }\n      }), __jsx(TodayButton, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }\n      }), __jsx(ViewSwitcher, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }\n      }), __jsx(AppointmentTooltip, {\n        showOpenButton: true,\n        showCloseButton: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }\n      }), __jsx(AppointmentForm, {\n        readOnly: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return Demo;\n}(React.PureComponent);\n\nexport { Demo as default };","map":{"version":3,"sources":["C:/Users/Noumane agouzil/Desktop/Normane/My projects/PfeProject/Front-End/pages/test/index.js"],"names":["React","Paper","LinearProgress","withStyles","moment","ViewState","Scheduler","WeekView","DayView","Appointments","Toolbar","DateNavigator","ViewSwitcher","AppointmentForm","AppointmentTooltip","TodayButton","URL","makeQueryString","currentDate","currentViewName","format","start","startOf","toLowerCase","end","clone","endOf","encodeURI","styles","toolbarRoot","position","progress","width","bottom","left","ToolbarWithLoading","name","children","classes","restProps","mapAppointmentData","appointment","startDate","StartDate","endDate","EndDate","title","Text","Demo","props","state","loading","loadData","bind","currentViewNameChange","setState","currentDateChange","queryString","lastQuery","fetch","then","response","json","data","setTimeout","formattedData","map","rootComponent","PureComponent"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport moment from 'moment';\r\nimport {\r\n  ViewState,\r\n} from '@devexpress/dx-react-scheduler';\r\nimport {\r\n  Scheduler,\r\n  WeekView,\r\n  DayView,\r\n  Appointments,\r\n  Toolbar,\r\n  DateNavigator,\r\n  ViewSwitcher,\r\n  AppointmentForm,\r\n  AppointmentTooltip,\r\n  TodayButton,\r\n} from '@devexpress/dx-react-scheduler-material-ui';\r\n\r\nconst URL = 'https://js.devexpress.com/Demos/Mvc/api/SchedulerData/Get';\r\n\r\nconst makeQueryString = (currentDate, currentViewName) => {\r\n  const format = 'YYYY-MM-DDTHH:mm:ss';\r\n  const start = moment(currentDate).startOf(currentViewName.toLowerCase());\r\n  const end = start.clone().endOf(currentViewName.toLowerCase());\r\n  return encodeURI(`${URL}?filter=[[\"EndDate\", \">\", \"${start.format(format)}\"],[\"StartDate\", \"<\", \"${end.format(format)}\"]]`);\r\n};\r\n\r\nconst styles = {\r\n  toolbarRoot: {\r\n    position: 'relative',\r\n  },\r\n  progress: {\r\n    position: 'absolute',\r\n    width: '100%',\r\n    bottom: 0,\r\n    left: 0,\r\n  },\r\n};\r\n\r\nconst ToolbarWithLoading = withStyles(styles, { name: 'Toolbar' })(\r\n  ({ children, classes, ...restProps }) => (\r\n    <div className={classes.toolbarRoot}>\r\n      <Toolbar.Root {...restProps}>\r\n        {children}\r\n      </Toolbar.Root>\r\n      <LinearProgress className={classes.progress} />\r\n    </div>\r\n  ),\r\n);\r\n\r\nconst mapAppointmentData = appointment => ({\r\n  ...appointment,\r\n  startDate: appointment.StartDate,\r\n  endDate: appointment.EndDate,\r\n  title: appointment.Text,\r\n});\r\n\r\nexport default class Demo extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      loading: true,\r\n      currentDate: '2017-05-23',\r\n      currentViewName: 'Day',\r\n    };\r\n    this.loadData = this.loadData.bind(this);\r\n    this.currentViewNameChange = (currentViewName) => {\r\n      this.setState({ currentViewName, loading: true });\r\n    };\r\n    this.currentDateChange = (currentDate) => {\r\n      this.setState({ currentDate, loading: true });\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.loadData();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.loadData();\r\n  }\r\n\r\n  loadData() {\r\n    const { currentDate, currentViewName } = this.state;\r\n    const queryString = makeQueryString(currentDate, currentViewName);\r\n    if (queryString === this.lastQuery) {\r\n      this.setState({ loading: false });\r\n      return;\r\n    }\r\n    fetch(queryString)\r\n      .then(response => response.json())\r\n      .then(({ data }) => {\r\n        setTimeout(() => {\r\n          this.setState({\r\n            data,\r\n            loading: false,\r\n          });\r\n        }, 600);\r\n      })\r\n      .catch(() => this.setState({ loading: false }));\r\n    this.lastQuery = queryString;\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      data, loading,\r\n      currentDate, currentViewName,\r\n    } = this.state;\r\n\r\n    const formattedData = data\r\n      ? data.map(mapAppointmentData) : [];\r\n\r\n    return (\r\n      <Paper>\r\n        <Scheduler\r\n          data={formattedData}\r\n          height={660}\r\n        >\r\n          <ViewState\r\n            currentDate={currentDate}\r\n            currentViewName={currentViewName}\r\n            onCurrentViewNameChange={this.currentViewNameChange}\r\n            onCurrentDateChange={this.currentDateChange}\r\n          />\r\n          <DayView\r\n            startDayHour={9}\r\n            endDayHour={18}\r\n          />\r\n          <WeekView\r\n            startDayHour={9}\r\n            endDayHour={18}\r\n          />\r\n          <Appointments />\r\n          <Toolbar\r\n            {...loading ? { rootComponent: ToolbarWithLoading } : null}\r\n          />\r\n          <DateNavigator />\r\n          <TodayButton />\r\n          <ViewSwitcher />\r\n          <AppointmentTooltip\r\n            showOpenButton\r\n            showCloseButton\r\n          />\r\n          <AppointmentForm readOnly />\r\n        </Scheduler>\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}