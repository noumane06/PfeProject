{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// Dependencies -------------------\nimport axios from 'axios';\nimport Lottie from 'react-lottie';\nimport { useState, useEffect } from 'react';\nimport { Progress, Spin, Select, Modal } from 'antd'; // File import ---------------------------------\n\nimport animationData from './Components/Anim.json';\nimport errorData from './Components/Error.json';\nimport loadingData from './Components/Loading.json';\nimport successData from './Components/Success.json';\nimport Head from '../../components/head';\nimport { storage } from './Components/firebase-config';\nimport '../../styles/ProfileSettings.scss';\nimport Footer from '../../components/footer'; //---------------------------------\n\nconst Settings = props => {\n  const {\n    Option\n  } = Select; // States \n\n  const {\n    0: data,\n    1: setData\n  } = useState();\n  const {\n    0: DiplomeList,\n    1: setDiplomeList\n  } = useState();\n  const {\n    0: percentage,\n    1: setPrecentage\n  } = useState(0);\n  const {\n    0: usrid,\n    1: setId\n  } = useState();\n  const {\n    0: DataState,\n    1: setState\n  } = useState(null);\n  const {\n    0: file,\n    1: setFile\n  } = useState();\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(true);\n  const {\n    0: sendingData,\n    1: setSend\n  } = useState(false);\n  const {\n    0: filefirebase,\n    1: setfire\n  } = useState(null);\n  const {\n    0: visible,\n    1: setvisible\n  } = useState(false);\n  const {\n    0: changed,\n    1: setchanged\n  } = useState(false);\n  const {\n    0: location,\n    1: setLocation\n  } = useState(\"/\");\n  const Fields = [\"Arabe\", \"Francais\", \"Anglais\", \"Spanish\"];\n  const children = [];\n  Fields.map(Field => {\n    children.push(__jsx(Option, {\n      key: Field\n    }, Field));\n  }); // ----------------------------------------------\n  // Modal functions \n\n  const showModal = () => {\n    setvisible(true);\n  };\n\n  const handleCancel = () => {\n    setvisible(false);\n  }; // Firebase url upload function \n\n\n  const firebaseUrl = file => {\n    return new Promise((resolve, reject) => {\n      let currentImageName = \"firebase-image-\" + Date.now();\n      let uploadImage = storage.ref(`images/${currentImageName}`).put(file);\n      uploadImage.on('state_changed', snapshot => {\n        var per = Math.floor(snapshot.bytesTransferred / snapshot.totalBytes * 100);\n        setPrecentage(per);\n      }, error => {\n        reject(error);\n      }, () => {\n        storage.ref('images').child(currentImageName).getDownloadURL().then(url => {\n          const imageData = [url, currentImageName];\n          resolve(imageData);\n        });\n      });\n    });\n  }; // Hook getting called before the render \n\n\n  useEffect(() => {\n    if (props.statusCode === 401) {\n      const location = \"/Auth/Signin/?ref=tokenexpired&location=\" + window.location.href;\n      window.location.replace(location);\n    } else {\n      setId(props.data.profile._id);\n      setDiplomeList(props.data.profile.diplome);\n      setFile(props.data.profile.Usrimg);\n      setData(props.data.profile);\n      setLoading(false);\n    }\n  }, []); // On submit ----------------------------------\n\n  const Onsubmit = async () => {\n    setSend(true);\n    let OldData = data;\n    OldData[\"diplome\"] = DiplomeList;\n    setData(OldData);\n\n    if (filefirebase !== null) {\n      const imgData = await firebaseUrl(filefirebase);\n      setData(data.Usrimg = imgData[0]);\n    } else {\n      setState(\"Loading\");\n    }\n\n    ;\n    console.log(data);\n    const url = \"http://15.237.56.214:9000/profiles/update?userid=\" + usrid;\n    await axios.post(url, data, {\n      withCredentials: true\n    }).then(response => {\n      if (response.status === 200) {\n        setState(\"done\");\n        setTimeout(() => {\n          window.location.assign(location);\n        }, 2000);\n      } else {\n        setState(\"error\");\n      }\n    }).catch(err => {\n      setState(\"error\");\n      console.log(err);\n    });\n  };\n\n  const handleInputChnage = event => {\n    const name = event.target.name;\n    const value = event.target.value;\n    setData(_objectSpread(_objectSpread({}, data), {}, {\n      [name]: value\n    }));\n  }; // ------------------------------------------------\n  // When click on delete picture \n\n\n  const handleClick = () => {\n    URL.revokeObjectURL(file);\n    setFile(data.Usrimg);\n    setchanged(false);\n  }; // When change of image\n\n\n  const handleChange = e => {\n    setchanged(true);\n\n    if (e.target.files[0] !== undefined) {\n      try {\n        setfire(e.target.files[0]);\n        const url = URL.createObjectURL(e.target.files[0]);\n        setFile(url);\n      } catch (error) {\n        console.error(error);\n        alert(error);\n      }\n    }\n  };\n\n  const dipChange = (e, index) => {\n    const {\n      name,\n      value\n    } = e.target;\n    const list = [...DiplomeList];\n    list[index][name] = value;\n    setDiplomeList(list);\n  };\n\n  const handleAddClick = () => {\n    setDiplomeList([...DiplomeList, {\n      diplomeName: \"\",\n      desc: \"\"\n    }]);\n  }; // handle click event of the Remove button\n\n\n  const handleRemoveClick = index => {\n    const list = [...DiplomeList];\n    list.splice(index, 1);\n    setDiplomeList(list);\n  }; // -----------------------------\n  // Languages handler \n\n\n  const handleLang = value => {\n    const string = value;\n    setData(_objectSpread(_objectSpread({}, data), {}, {\n      languages: string\n    }));\n  }; // Lottie options \n\n\n  const defaultOptions = {\n    loop: true,\n    autoplay: true,\n    animationData: animationData,\n    rendererSettings: {\n      preserveAspectRatio: \"xMidYMid\"\n    }\n  };\n  const LoadingOptions = {\n    loop: true,\n    autoplay: true,\n    animationData: loadingData,\n    rendererSettings: {\n      preserveAspectRatio: \"xMidYMid\"\n    }\n  };\n  const ErrorOptions = {\n    loop: false,\n    autoplay: true,\n    animationData: errorData,\n    rendererSettings: {\n      preserveAspectRatio: \"xMidYMid\"\n    }\n  };\n  const DoneOptions = {\n    loop: false,\n    autoplay: true,\n    animationData: successData,\n    rendererSettings: {\n      preserveAspectRatio: \"xMidYMid\"\n    }\n  }; // ---------------------------------\n\n  if (loading) {\n    return __jsx(React.Fragment, null, __jsx(Head, {\n      title: \"Configurez votre profile | 6 Solutions\"\n    }), __jsx(\"div\", {\n      className: \"spincentered\"\n    }, __jsx(Spin, {\n      size: \"large\"\n    })));\n  } else {\n    return __jsx(React.Fragment, null, __jsx(\"div\", {\n      className: \"ConfigureProfile\"\n    }, __jsx(Head, {\n      title: \"Configurez votre profile | 6 Solutions\"\n    }), __jsx(\"div\", {\n      className: \"ContentInside\"\n    }, __jsx(\"div\", {\n      className: \"HeaderContainer\",\n      onClick: () => window.location.assign(\"/\"),\n      style: {\n        cursor: 'pointer'\n      }\n    }, __jsx(\"div\", {\n      className: \"Header_Logo\"\n    }, __jsx(\"img\", {\n      src: \"../static/Icons/LOGO2017.png\",\n      height: \"30\"\n    })), __jsx(\"div\", null), __jsx(\"span\", null, \"Help\")), sendingData && DataState === null && __jsx(\"div\", {\n      className: \"SendingData\"\n    }, __jsx(Progress, {\n      type: \"circle\",\n      strokeColor: {\n        '0%': '#00308F',\n        '100%': '#7CB9E8'\n      },\n      percent: percentage\n    }), __jsx(\"h1\", null, \"Veuillez patienter ... \"), __jsx(\"p\", null, \"Nous mettons \\xE0 jour votre profil\")), sendingData && DataState === \"Loading\" && __jsx(\"div\", {\n      className: \"SendingData\"\n    }, __jsx(Lottie, {\n      options: LoadingOptions,\n      height: 200,\n      width: 200\n    }), __jsx(\"h1\", null, \"Veuillez patienter ... \"), __jsx(\"p\", null, \"Nous mettons \\xE0 jour votre profil\")), sendingData && DataState == \"error\" && __jsx(\"div\", {\n      className: \"WrongData\"\n    }, __jsx(Lottie, {\n      options: ErrorOptions,\n      height: 200,\n      width: 200\n    }), __jsx(\"h1\", null, \"Veuillez r\\xE9essayer plus tard\"), __jsx(\"p\", null, \"Une erreur s'est produite lors de la mise \\xE0 jour\")), sendingData && DataState == \"done\" && __jsx(\"div\", {\n      className: \"SuccessData\"\n    }, __jsx(Lottie, {\n      options: DoneOptions,\n      height: 200,\n      width: 200\n    }), __jsx(\"h1\", null, \"Mise \\xE0 jour du profil r\\xE9ussie\"), __jsx(\"p\", null, \"Vous serez bient\\xF4t redirig\\xE9\")), !sendingData && __jsx(React.Fragment, null, __jsx(\"div\", {\n      className: \"FlexContainer\"\n    }, __jsx(\"div\", {\n      className: \"dataContainer\"\n    }, __jsx(\"div\", {\n      className: \"formConfig\"\n    }, __jsx(\"div\", {\n      className: \"form_Head\"\n    }, __jsx(\"div\", {\n      className: \"ProfileImg\"\n    }, __jsx(\"img\", {\n      src: file,\n      onClick: showModal\n    }), __jsx(\"br\", null), __jsx(\"div\", null, __jsx(\"label\", {\n      className: \"custom-file-upload\"\n    }, __jsx(\"input\", {\n      type: \"file\",\n      id: \"img\",\n      name: \"img\",\n      placeholder: \"Choisissez photo\",\n      accept: \"image/*\",\n      onChange: handleChange\n    }), __jsx(\"i\", {\n      className: \"fa fa-upload\",\n      \"aria-hidden\": \"true\"\n    }), \"   Ajouter photo\"), changed && __jsx(\"label\", {\n      className: \"Showmodal\",\n      onClick: handleClick\n    }, __jsx(\"i\", {\n      class: \"fa fa-user-times\",\n      style: {\n        color: '#be0000'\n      }\n    }))), __jsx(Modal, {\n      title: \"Image de profile\",\n      visible: visible,\n      onCancel: handleCancel,\n      footer: null\n    }, __jsx(\"img\", {\n      src: file,\n      width: \"100%\"\n    }))), __jsx(\"div\", {\n      className: \"ProfileInfo\"\n    }, data.type == \"Société\" && __jsx(\"h3\", null, data.companyname), data.type == \"Client\" && __jsx(\"h3\", null, data.nom, \" \", data.prenom))), __jsx(\"div\", {\n      className: \"fieldsContainer\"\n    }, __jsx(\"div\", {\n      className: \"Row\"\n    }, __jsx(\"label\", null, \"Presentation\"), __jsx(\"br\", null), __jsx(\"textarea\", {\n      className: \"input\",\n      name: \"presentation\",\n      placeholder: data.type !== \"Société\" ? \"Parlez-nous de vous (optionnel)\" : \"Décrivez votre entreprise\",\n      rows: \"4\",\n      onChange: handleInputChnage,\n      value: data.presentation\n    }), __jsx(\"label\", null, \"Langues parl\\xE9s\"), __jsx(Select, {\n      mode: \"tags\",\n      style: {\n        width: '100%',\n        marginTop: '20px',\n        padding: '7px 4px',\n        borderRadius: '10px',\n        backgroundColor: '#e9f1fa'\n      },\n      placeholder: \"Ex: Francais , arabe ...\",\n      onChange: handleLang,\n      value: data.languages,\n      maxTagCount: 3\n    }, children), __jsx(\"label\", null, \"Dipl\\xF4me et formations\"), __jsx(\"div\", {\n      className: \"Diplomes\"\n    }, DiplomeList.map((element, index) => __jsx(\"div\", {\n      className: \"container\"\n    }, __jsx(\"input\", {\n      className: \"input diplome\",\n      type: \"text\",\n      name: \"diplomeName\",\n      placeholder: \"Votre Diplome\",\n      value: element.diplomeName,\n      onChange: e => dipChange(e, index)\n    }), __jsx(\"input\", {\n      className: index !== 0 ? \"input desc2\" : \"input desc\",\n      type: \"text\",\n      name: \"desc\",\n      placeholder: \"Br\\xE8ve description\",\n      value: element.desc,\n      onChange: e => dipChange(e, index)\n    }), index !== 0 && __jsx(\"label\", {\n      className: \"delete\",\n      onClick: () => handleRemoveClick(index)\n    }, __jsx(\"i\", {\n      class: \"fa fa-trash\",\n      \"aria-hidden\": \"true\",\n      style: {\n        color: '#be0000'\n      }\n    })))), __jsx(\"div\", {\n      className: \"container \"\n    }, __jsx(\"button\", {\n      onClick: handleAddClick,\n      className: \"ajouter\"\n    }, \"Ajouter\")))))), __jsx(\"div\", {\n      className: \"Illustration\"\n    }, __jsx(\"div\", {\n      className: \"ill\"\n    }, __jsx(Lottie, {\n      options: defaultOptions,\n      height: 500,\n      width: 500\n    })), __jsx(\"div\", {\n      className: \"buttonContainer\"\n    }, __jsx(\"a\", {\n      className: \"later\",\n      href: \"/\",\n      style: {\n        textDecoration: 'none'\n      }\n    }, \"later\"), __jsx(\"input\", {\n      className: \"SignButton next\",\n      type: \"submit\",\n      onClick: Onsubmit,\n      value: \"Suivant\"\n    })))))))), __jsx(Footer, null));\n  }\n};\n\nexport const getServerSideProps = async ctx => {\n  try {\n    const cookie = ctx.req.headers.cookie;\n    const url = \"http://15.237.56.214:9000/profiles/myprofile\";\n    const res = await fetch(url, {\n      headers: {\n        cookie\n      }\n    });\n    const statusCode = res.status;\n    const data = await res.json();\n\n    if (statusCode !== 200) {\n      throw statusCode;\n    }\n\n    return {\n      props: {\n        data\n      }\n    };\n  } catch (error) {\n    ctx.res.statusCode = error;\n    return {\n      props: {\n        statusCode: error\n      }\n    };\n  }\n};\nexport default Settings;","map":null,"metadata":{},"sourceType":"module"}