{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Noumane agouzil\\\\Desktop\\\\Normane\\\\My projects\\\\PfeProject\\\\Front-End\\\\pages\\\\Notifications\\\\index.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Header from \"../../components/header\";\nimport Head from \"../../components/head\";\nimport { useState, useEffect } from 'react';\nimport { Spin } from 'antd';\nimport './Sass/notif.scss';\nimport NotifCard from \"./Components/NotifCard\";\nimport NotifBell from \"../../components/svg/NotifBell\";\n\nconst Notification = props => {\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(true);\n  useEffect(() => {\n    if (props.statusCode === 401) {\n      const location = \"/Auth/Signin/?ref=tokenexpired&location=\" + window.location.href;\n      window.location.replace(location);\n    } else {\n      setLoading(false);\n    }\n  }, []);\n  console.log(props);\n  const Notifications =\n  /* props.data.Notification*/\n  [\"test\"];\n\n  if (loading) {\n    return __jsx(React.Fragment, null, __jsx(Head, {\n      title: \"Loading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }\n    }), __jsx(\"div\", {\n      style: {\n        position: 'fixed',\n        top: '50%',\n        left: '50%',\n        marginTop: '-50px',\n        marginLeft: '-50px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }\n    }, __jsx(Spin, {\n      size: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }\n    })));\n  } else {\n    return __jsx(\"div\", {\n      className: \"body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }, __jsx(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    }), __jsx(Head, {\n      title: \"Notifications | 6Solutions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }\n    }), __jsx(\"div\", {\n      className: \"NotifBody\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }, __jsx(\"div\", {\n      className: \"NotTitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }\n    }, __jsx(\"span\", {\n      className: \"icon-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 25\n      }\n    }, __jsx(NotifBell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 55\n      }\n    })), __jsx(\"h1\", {\n      className: \"NotifHeader\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 25\n      }\n    }, \"Notifications\")), __jsx(\"p\", {\n      className: \"Warning\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }\n    }, \"La r\\xE9union sera automatiquement annul\\xE9e si aucune r\\xE9ponse n\\u2019a \\xE9t\\xE9 donn\\xE9e ( 1h avant la r\\xE9union au plus tard)\"), __jsx(\"div\", {\n      className: \"NotifContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }\n    }, Notifications.map(notif => __jsx(NotifCard, {\n      key: notif.SenderId,\n      notif: notif,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 53\n      }\n    })))));\n  }\n};\n\nexport const getServerSideProps = async ctx => {\n  try {\n    const cookie = ctx.req.headers.cookie;\n    const url = \"http://localhost:9000/profiles/myprofile\";\n    const res = await fetch(url, {\n      headers: {\n        cookie\n      }\n    });\n    const statusCode = res.status;\n    const data = await res.json();\n\n    if (statusCode !== 200) {\n      throw statusCode;\n    }\n\n    return {\n      props: {\n        data\n      }\n    };\n  } catch (error) {\n    ctx.res.statusCode = error;\n    return {\n      props: {\n        statusCode: error\n      }\n    };\n  }\n};\nexport default Notification;","map":{"version":3,"sources":["C:/Users/Noumane agouzil/Desktop/Normane/My projects/PfeProject/Front-End/pages/Notifications/index.jsx"],"names":["Header","Head","useState","useEffect","Spin","NotifCard","NotifBell","Notification","props","loading","setLoading","statusCode","location","window","href","replace","console","log","Notifications","position","top","left","marginTop","marginLeft","map","notif","SenderId","getServerSideProps","ctx","cookie","req","headers","url","res","fetch","status","data","json","error"],"mappings":"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","sourcesContent":["import Header from \"../../components/header\";\r\nimport Head from \"../../components/head\";\r\nimport {useState , useEffect} from 'react';\r\nimport {Spin } from 'antd';\r\nimport './Sass/notif.scss';\r\nimport NotifCard from \"./Components/NotifCard\";\r\nimport NotifBell from \"../../components/svg/NotifBell\";\r\n\r\nconst Notification = (props)=>{\r\n    \r\n    const [loading,setLoading] = useState(true);\r\n    useEffect(()=>{\r\n        if (props.statusCode === 401) {\r\n            const location = \"/Auth/Signin/?ref=tokenexpired&location=\"+window.location.href;\r\n            window.location.replace(location);\r\n        }else{\r\n            setLoading(false);\r\n        }\r\n    },[])\r\n    console.log(props);\r\n    const Notifications =/* props.data.Notification*/[\"test\"] ;\r\n    if (loading ) {\r\n        \r\n        return(\r\n        <>\r\n                <Head title=\"Loading\"/>\r\n                <div style={{position : 'fixed',top : '50%',left:'50%',marginTop :'-50px',marginLeft:'-50px'}}>\r\n                    <Spin size=\"large\" />\r\n                </div>\r\n        </>\r\n        )\r\n    }else{\r\n        return(\r\n            <div className=\"body\">\r\n                <Header/>\r\n                <Head title=\"Notifications | 6Solutions\"/>\r\n                <div className=\"NotifBody\">\r\n                    <div className=\"NotTitle\">\r\n                        <span className=\"icon-button\"><NotifBell/></span>\r\n                        <h1 className=\"NotifHeader\">Notifications</h1>\r\n                    </div>\r\n                    \r\n                    <p className=\"Warning\">La réunion sera automatiquement annulée si aucune réponse n’a été donnée ( 1h avant la réunion au plus tard)</p>\r\n                    <div className=\"NotifContainer\">\r\n                        {Notifications.map(notif => <NotifCard key={notif.SenderId} notif={notif}/>)}    \r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\nexport const getServerSideProps = async (ctx) => {\r\n    try {\r\n        const cookie = ctx.req.headers.cookie ;\r\n        const url = \"http://localhost:9000/profiles/myprofile\" ;\r\n        const res = await fetch( url,{headers : {cookie}}); \r\n        const statusCode = res.status;\r\n        const data = await res.json();\r\n        \r\n        if (statusCode !== 200) {\r\n            throw statusCode \r\n        }\r\n        return  {\r\n            props : {data }\r\n        }\r\n    } \r\n    catch (error) {\r\n        ctx.res.statusCode = error;\r\n        return {\r\n               props : {statusCode : error}\r\n        };\r\n    }   \r\n}\r\nexport default Notification"]},"metadata":{},"sourceType":"module"}