{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Noumane agouzil\\\\Desktop\\\\Normane\\\\My projects\\\\PfeProject\\\\Front-End\\\\pages\\\\Profiles\\\\Components\\\\BookMeeting.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Modal from 'antd/lib/modal/Modal';\nimport { useState } from 'react';\nimport moment from 'moment';\nimport { Button } from 'antd';\n\nconst Scheduler = (StartHour, endtHour, length) => {\n  const results = [];\n\n  for (let i = 0; i <= parseInt(length); i++) {\n    const string = StartHour.format('HH:mm') + \"-\" + StartHour.add(30, 'minutes').format('HH:mm'); // Break betweeen meetings\n\n    results.push(string);\n\n    if (Math.abs(moment.duration(StartHour.diff(endtHour)).asMinutes()) <= 30) {\n      break;\n    }\n\n    StartHour.add(15, 'minutes');\n  }\n\n  return results;\n};\n\nconst DatePicker = string => {\n  const day = new Date(string);\n  const Days = ['Dimanche', 'Lundi', 'Mardi', 'Mercredi', 'Jeudi', 'Vendredi', 'Samedi'];\n  const Months = ['Janvier', 'FÃ©vrier', 'Mars', 'Avril', 'Mai', 'Juin', 'Juillet', 'Aout', 'Septembre', 'Octobre', 'Novembre', 'Decembre'];\n  const DisplayString = [Days[day.getDay()], day.getDate(), Months[day.getMonth() + 1]];\n  return DisplayString;\n};\n\nconst calendar = () => {\n  //Data from database \n  const date = new Date(); // Setting Schedule ----------------------\n\n  const Booked = {\n    '2020/09/10': ['08:00-08:30', '11:45-12:15']\n  };\n  const Horraire = ['08:00', '17:15'];\n  const StartHour = moment(Horraire[0], \"HH:mm\");\n  const endtHour = moment(Horraire[1], \"HH:mm\");\n  const length = (endtHour.format(\"HH\") - StartHour.format(\"HH\")) * 60 / 45;\n  const results = Scheduler(StartHour, endtHour, length); // --------------------------------------\n  // States -------------------\n\n  const {\n    0: visible,\n    1: setvisible\n  } = useState(false);\n  const {\n    0: title,\n    1: setTitle\n  } = useState(); // -----------------------\n\n  const datePusher = new Date();\n  const dayResult = [];\n  dayResult.push(moment(Date.now()).format('YYYY/MM/DD'));\n\n  for (let i = 0; i < 6; i++) {\n    datePusher.setDate(datePusher.getDate() + 1);\n    dayResult.push(moment(datePusher).format('YYYY/MM/DD'));\n  }\n\n  console.log(dayResult);\n  return __jsx(\"table\", {\n    id: \"customers\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, __jsx(Modal, {\n    title: title,\n    visible: visible,\n    width: \"50vw\",\n    onCancel: () => setvisible(false),\n    footer: [__jsx(Button, {\n      disabled: false,\n      key: \"submit\",\n      type: \"primary\",\n      style: {\n        borderRadius: '10px',\n        fontFamily: 'GlacialBold'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 29\n      }\n    }, \"Submit\")],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, \"Hello\"), __jsx(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, __jsx(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }), dayResult.map((day, index) => __jsx(\"th\", {\n    key: day + Date.now(),\n    style: parseInt(day.split('/')[2]) === date.getDate() ? {\n      color: '#1a73e8',\n      textAlign: \"center\"\n    } : {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 51\n    }\n  }, DatePicker(day)[0], \" \", __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 224\n    }\n  }), \" \", DatePicker(day)[1], \" \", DatePicker(day)[2], \" \")))), __jsx(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, results.map(hour => __jsx(\"tr\", {\n    key: hour + Date.now(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }, __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 25\n    }\n  }, hour), dayResult.map(day => __jsx(\"td\", {\n    key: day + hour,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 25\n    }\n  }, Booked[day] !== undefined && (Booked[day].includes(hour) ? __jsx(\"div\", {\n    className: \"Booked\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 62\n    }\n  }, \"Booked\") : __jsx(\"div\", {\n    onClick: () => {\n      setTitle(hour + \" | \" + day + \" | \");\n      setvisible(true);\n    },\n    className: \"Free\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 101\n    }\n  }))))))));\n};\n\nexport default calendar;","map":{"version":3,"sources":["C:/Users/Noumane agouzil/Desktop/Normane/My projects/PfeProject/Front-End/pages/Profiles/Components/BookMeeting.jsx"],"names":["Modal","useState","moment","Button","Scheduler","StartHour","endtHour","length","results","i","parseInt","string","format","add","push","Math","abs","duration","diff","asMinutes","DatePicker","day","Date","Days","Months","DisplayString","getDay","getDate","getMonth","calendar","date","Booked","Horraire","visible","setvisible","title","setTitle","datePusher","dayResult","now","setDate","console","log","borderRadius","fontFamily","map","index","split","color","textAlign","hour","undefined","includes"],"mappings":"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","sourcesContent":["\r\nimport Modal from 'antd/lib/modal/Modal';\r\nimport {useState} from 'react';\r\nimport moment from 'moment';\r\nimport { Button } from 'antd';\r\nconst Scheduler =  (StartHour , endtHour , length )=>{\r\n    const results = [];\r\n     for (let i = 0; i <= parseInt(length) ; i++) {\r\n        const string  =  StartHour.format('HH:mm')+\"-\"+StartHour.add(30,'minutes').format('HH:mm') ;\r\n\r\n        // Break betweeen meetings\r\n         results.push(string);\r\n        if (Math.abs(moment.duration(StartHour.diff(endtHour)).asMinutes()) <= 30 ) {\r\n            break ;\r\n        }\r\n        \r\n         StartHour.add(15,'minutes');\r\n    }\r\n    return(results);\r\n}\r\n\r\nconst DatePicker = (string) =>\r\n{\r\n    const day = new Date(string);\r\n    const Days = ['Dimanche','Lundi','Mardi','Mercredi','Jeudi','Vendredi','Samedi'];\r\n    const Months = ['Janvier','FÃ©vrier','Mars','Avril','Mai','Juin','Juillet','Aout','Septembre','Octobre','Novembre','Decembre'];\r\n    const DisplayString = [Days[day.getDay()],day.getDate(),Months[day.getMonth()+1]];\r\n\r\n    return DisplayString;\r\n}\r\n\r\nconst calendar = ()=>{\r\n\r\n    //Data from database \r\n    const date = new Date();\r\n\r\n    // Setting Schedule ----------------------\r\n    const Booked = { '2020/09/10' : ['08:00-08:30','11:45-12:15']};\r\n    const Horraire = ['08:00','17:15'];\r\n    const StartHour = moment(Horraire[0],\"HH:mm\");\r\n    const endtHour = moment(Horraire[1],\"HH:mm\");\r\n    const length = (endtHour.format(\"HH\")-StartHour.format(\"HH\"))*60/45;\r\n    const results = Scheduler(StartHour,endtHour,length);\r\n\r\n    // --------------------------------------\r\n    // States -------------------\r\n    const [visible,setvisible] = useState(false);\r\n    const [title , setTitle] = useState();\r\n    // -----------------------\r\n    const datePusher = new Date();\r\n    const dayResult = [];\r\n    dayResult.push(moment(Date.now()).format('YYYY/MM/DD'))\r\n    for (let i = 0 ; i < 6; i++) {\r\n        datePusher.setDate(datePusher.getDate()+1);\r\n        dayResult.push(moment(datePusher).format('YYYY/MM/DD'));\r\n    }\r\n    console.log(dayResult);\r\n    return(\r\n        <table id=\"customers\">\r\n            <Modal title={title} visible={visible} width=\"50vw\" onCancel={()=>setvisible(false)}  footer={[\r\n                            <Button disabled={false} key=\"submit\" type=\"primary\"  style={{borderRadius :'10px', fontFamily :'GlacialBold'}}  >\r\n                                Submit\r\n                            </Button>\r\n                            ]}>Hello</Modal>\r\n            <thead>\r\n            \r\n                <tr>\r\n                    <th></th>\r\n                    {dayResult.map((day,index) =>(<th key={day+Date.now()}  style={parseInt(day.split('/')[2]) === date.getDate() ? {color : '#1a73e8' , textAlign : \"center\"} : {textAlign : \"center\"}} >{DatePicker(day)[0]} <br/> {DatePicker(day)[1]} {DatePicker(day)[2]} </th>))}\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {results.map(hour => (\r\n                    <tr key={hour+Date.now()}> \r\n                        <th>{hour}</th>\r\n                        {dayResult.map(day =>(\r\n                        <td key={day+hour} >\r\n                            {Booked[day] !== undefined &&(\r\n                                Booked[day].includes(hour) ? <div className=\"Booked\">Booked</div> : <div onClick={()=>{setTitle(hour+\" | \"+day+\" | \"); setvisible(true)}} className=\"Free\"></div>\r\n                            )}\r\n                        </td>))}\r\n                    </tr>\r\n                ))}\r\n            </tbody>\r\n            \r\n        </table>\r\n    )\r\n}\r\nexport default calendar ;"]},"metadata":{},"sourceType":"module"}