{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Noumane agouzil\\\\Desktop\\\\Normane\\\\My projects\\\\PfeProject\\\\Front-End\\\\pages\\\\test\\\\index.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { withStyles } from '@material-ui/core/styles';\nimport moment from 'moment';\nimport { ViewState } from '@devexpress/dx-react-scheduler';\nimport { Scheduler, WeekView, DayView, Appointments, Toolbar, DateNavigator, ViewSwitcher, AppointmentForm, AppointmentTooltip, TodayButton } from '@devexpress/dx-react-scheduler-material-ui';\nvar URL = 'https://js.devexpress.com/Demos/Mvc/api/SchedulerData/Get';\n\nvar makeQueryString = function makeQueryString(currentDate, currentViewName) {\n  var format = 'YYYY-MM-DDTHH:mm:ss';\n  var start = moment(currentDate).startOf(currentViewName.toLowerCase());\n  var end = start.clone().endOf(currentViewName.toLowerCase());\n  return encodeURI(\"\".concat(URL, \"?filter=[[\\\"EndDate\\\", \\\">\\\", \\\"\").concat(start.format(format), \"\\\"],[\\\"StartDate\\\", \\\"<\\\", \\\"\").concat(end.format(format), \"\\\"]]\"));\n};\n\nvar mapAppointmentData = function mapAppointmentData(appointment) {\n  return _objectSpread(_objectSpread({}, appointment), {}, {\n    startDate: appointment.StartDate,\n    endDate: appointment.EndDate,\n    title: appointment.Text\n  });\n};\n\nvar date = new Date();\n\nvar Demo = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(Demo, _React$PureComponent);\n\n  var _super = _createSuper(Demo);\n\n  function Demo(props) {\n    var _this;\n\n    _classCallCheck(this, Demo);\n\n    _this = _super.call(this, props);\n    var string = '\"' + date.getFullYear() + '-' + date.getMonth() + '-' + date.getDate() + '\"';\n    console.log(string);\n    _this.state = {\n      loading: true,\n      currentDate: string,\n      currentViewName: 'Day'\n    };\n    _this.loadData = _this.loadData.bind(_assertThisInitialized(_this));\n\n    _this.currentViewNameChange = function (currentViewName) {\n      _this.setState({\n        currentViewName: currentViewName,\n        loading: true\n      });\n    };\n\n    _this.currentDateChange = function (currentDate) {\n      _this.setState({\n        currentDate: currentDate,\n        loading: true\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Demo, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadData();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.loadData();\n    }\n  }, {\n    key: \"loadData\",\n    value: function loadData() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          currentDate = _this$state.currentDate,\n          currentViewName = _this$state.currentViewName;\n      var queryString = makeQueryString(currentDate, currentViewName);\n\n      if (queryString === this.lastQuery) {\n        this.setState({\n          loading: false\n        });\n        return;\n      }\n\n      fetch(queryString).then(function (response) {\n        return response.json();\n      }).then(function (_ref) {\n        var data = _ref.data;\n        setTimeout(function () {\n          _this2.setState({\n            data: data,\n            loading: false\n          });\n        }, 600);\n      })[\"catch\"](function () {\n        return _this2.setState({\n          loading: false\n        });\n      });\n      this.lastQuery = queryString;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          data = _this$state2.data,\n          loading = _this$state2.loading,\n          currentDate = _this$state2.currentDate,\n          currentViewName = _this$state2.currentViewName;\n      var formattedData = data ? data.map(mapAppointmentData) : [];\n      return __jsx(Paper, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }\n      }, __jsx(Scheduler, {\n        data: formattedData,\n        height: 660,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }\n      }, __jsx(ViewState, {\n        defaultCurrentDate: \"2018-07-25\",\n        defaultCurrentViewName: \"Week\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }\n      }), __jsx(DayView, {\n        startDayHour: 9,\n        endDayHour: 18,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }\n      }), __jsx(WeekView, {\n        startDayHour: 10,\n        endDayHour: 19,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }\n      }), __jsx(Toolbar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }\n      }), __jsx(ViewSwitcher, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }\n      }), __jsx(Appointments, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }\n      })));\n    }\n  }]);\n\n  return Demo;\n}(React.PureComponent);\n\nexport { Demo as default };","map":{"version":3,"sources":["C:/Users/Noumane agouzil/Desktop/Normane/My projects/PfeProject/Front-End/pages/test/index.js"],"names":["React","Paper","LinearProgress","withStyles","moment","ViewState","Scheduler","WeekView","DayView","Appointments","Toolbar","DateNavigator","ViewSwitcher","AppointmentForm","AppointmentTooltip","TodayButton","URL","makeQueryString","currentDate","currentViewName","format","start","startOf","toLowerCase","end","clone","endOf","encodeURI","mapAppointmentData","appointment","startDate","StartDate","endDate","EndDate","title","Text","date","Date","Demo","props","string","getFullYear","getMonth","getDate","console","log","state","loading","loadData","bind","currentViewNameChange","setState","currentDateChange","queryString","lastQuery","fetch","then","response","json","data","setTimeout","formattedData","map","PureComponent"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport moment from 'moment';\r\nimport {\r\n  ViewState,\r\n} from '@devexpress/dx-react-scheduler';\r\nimport {\r\n  Scheduler,\r\n  WeekView,\r\n  DayView,\r\n  Appointments,\r\n  Toolbar,\r\n  DateNavigator,\r\n  ViewSwitcher,\r\n  AppointmentForm,\r\n  AppointmentTooltip,\r\n  TodayButton,\r\n} from '@devexpress/dx-react-scheduler-material-ui';\r\n\r\nconst URL = 'https://js.devexpress.com/Demos/Mvc/api/SchedulerData/Get';\r\n\r\nconst makeQueryString = (currentDate, currentViewName) => {\r\n  const format = 'YYYY-MM-DDTHH:mm:ss';\r\n  const start = moment(currentDate).startOf(currentViewName.toLowerCase());\r\n  const end = start.clone().endOf(currentViewName.toLowerCase());\r\n  return encodeURI(`${URL}?filter=[[\"EndDate\", \">\", \"${start.format(format)}\"],[\"StartDate\", \"<\", \"${end.format(format)}\"]]`);\r\n};\r\n\r\n\r\nconst mapAppointmentData = appointment => ({\r\n  ...appointment,\r\n  startDate: appointment.StartDate,\r\n  endDate: appointment.EndDate,\r\n  title: appointment.Text,\r\n});\r\nconst date = new Date();\r\nexport default class Demo extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    var string = '\"'+date.getFullYear()+'-'+date.getMonth() + '-'+date.getDate() +'\"' ;\r\n    console.log(string);\r\n    this.state = {\r\n      loading: true,\r\n      currentDate: string,\r\n      currentViewName: 'Day',\r\n    };\r\n    this.loadData = this.loadData.bind(this);\r\n    this.currentViewNameChange = (currentViewName) => {\r\n      this.setState({ currentViewName, loading: true });\r\n    };\r\n    this.currentDateChange = (currentDate) => {\r\n      this.setState({ currentDate, loading: true });\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.loadData();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.loadData();\r\n  }\r\n\r\n  loadData() {\r\n    const { currentDate, currentViewName } = this.state;\r\n    const queryString = makeQueryString(currentDate, currentViewName);\r\n    if (queryString === this.lastQuery) {\r\n      this.setState({ loading: false });\r\n      return;\r\n    }\r\n    fetch(queryString)\r\n      .then(response => response.json())\r\n      .then(({ data }) => {\r\n        setTimeout(() => {\r\n          this.setState({\r\n            data,\r\n            loading: false,\r\n          });\r\n        }, 600);\r\n      })\r\n      .catch(() => this.setState({ loading: false }));\r\n    this.lastQuery = queryString;\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      data, loading,\r\n      currentDate, currentViewName,\r\n    } = this.state;\r\n\r\n    const formattedData = data\r\n      ? data.map(mapAppointmentData) : [];\r\n\r\n    return (\r\n          <Paper>\r\n          <Scheduler\r\n            data={formattedData}\r\n            height={660}\r\n          >\r\n            <ViewState\r\n              defaultCurrentDate=\"2018-07-25\"\r\n              defaultCurrentViewName=\"Week\"\r\n            />\r\n\r\n            <DayView\r\n              startDayHour={9}\r\n              endDayHour={18}\r\n            />\r\n            <WeekView\r\n              startDayHour={10}\r\n              endDayHour={19}\r\n            />\r\n\r\n            <Toolbar />\r\n            <ViewSwitcher />\r\n            <Appointments />\r\n          </Scheduler>\r\n        </Paper>\r\n    );\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}