{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Noumane agouzil\\\\Desktop\\\\Normane\\\\My projects\\\\PfeProject\\\\Front-End\\\\pages\\\\Notifications\\\\Components\\\\NotifCard.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Modal from 'antd/lib/modal/Modal';\nimport { Popconfirm, Button } from 'antd';\nimport Axios from 'axios';\nimport { useState, useEffect } from 'react';\n\nconst NotifCard = ({\n  notif\n}) => {\n  const {\n    0: isFull,\n    1: setFulltext\n  } = useState(notif.Message.length < 150);\n  const {\n    0: Data,\n    1: setData\n  } = useState();\n  const {\n    0: Loading,\n    1: setLoading\n  } = useState(true);\n  const {\n    0: buttonLoading,\n    1: setbuttonLoad\n  } = useState(false); // Handle data before loading componenent\n\n  useEffect(() => {\n    Axios.get(\"http://localhost:9000/profiles/profile?userid=\" + notif.SenderId, {\n      withCredentials: true\n    }).then(result => {\n      console.log(result.data.profile);\n      setData(result.data.profile);\n      setLoading(false);\n    }).catch(err => console.log(err));\n  }, []); // ----------------------------\n  // When accept the request handler \n\n  const HandleAccept = () => {};\n\n  if (Loading) {\n    return null;\n  } else {\n    return __jsx(\"div\", {\n      className: \"NotifCard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    }, __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }\n    }, __jsx(\"strong\", {\n      style: {\n        color: '#0C72BF'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 20\n      }\n    }, \"Ce client\"), \" souhaite r\\xE9server une r\\xE9union \\xE0 \", __jsx(\"strong\", {\n      style: {\n        color: '#0C72BF'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 107\n      }\n    }, notif.horraire)), __jsx(\"div\", {\n      className: \"Card_Head\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }\n    }, __jsx(\"div\", {\n      className: \"ProfileImg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }\n    }, __jsx(\"img\", {\n      src: Data.Usrimg,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 25\n      }\n    })), __jsx(\"div\", {\n      className: \"ProfileInfo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }\n    }, __jsx(\"a\", {\n      href: \"/Profiles/\" + notif.SenderId,\n      className: \"profileLink\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 25\n      }\n    }, __jsx(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 87\n      }\n    }, Data.companyname)))), __jsx(\"div\", {\n      className: \"Card_Body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }\n    }, __jsx(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }\n    }, \"Message\"), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }\n    }, !isFull ? notif.Message.substr(0, 150) : notif.Message, !isFull ? __jsx(\"span\", {\n      className: \"more\",\n      onClick: () => setFulltext(true),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 33\n      }\n    }, \"Voir plus\") : \"\")), __jsx(\"div\", {\n      className: \"Card_footer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }, notif.AcceptStatus === null && __jsx(React.Fragment, null, __jsx(Popconfirm, {\n      title: \"Are you sure delete this task?\",\n      okButtonProps: __jsx(Button, {\n        key: \"submit\",\n        type: \"primary\",\n        loading: buttonLoading,\n        style: {\n          borderRadius: '10px',\n          fontFamily: 'GlacialBold'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 33\n        }\n      }, \"Submit\"),\n      cancelText: \"No\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 25\n      }\n    }, __jsx(\"button\", {\n      className: \"Accepter\",\n      onClick: HandleAccept,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 29\n      }\n    }, \"Accepter\")), __jsx(\"button\", {\n      className: \"Refuser\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 25\n      }\n    }, \"Refuser\"))));\n  }\n};\n\nexport default NotifCard;","map":{"version":3,"sources":["C:/Users/Noumane agouzil/Desktop/Normane/My projects/PfeProject/Front-End/pages/Notifications/Components/NotifCard.jsx"],"names":["Modal","Popconfirm","Button","Axios","useState","useEffect","NotifCard","notif","isFull","setFulltext","Message","length","Data","setData","Loading","setLoading","buttonLoading","setbuttonLoad","get","SenderId","withCredentials","then","result","console","log","data","profile","catch","err","HandleAccept","color","horraire","Usrimg","companyname","substr","AcceptStatus","borderRadius","fontFamily"],"mappings":"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","sourcesContent":["import Modal from 'antd/lib/modal/Modal';\r\nimport {Popconfirm , Button} from 'antd';\r\nimport Axios from 'axios';\r\nimport {useState , useEffect} from 'react';\r\nconst NotifCard = ({notif}) =>{\r\n\r\n    const [isFull , setFulltext] = useState(notif.Message.length < 150);\r\n    const [Data , setData] = useState();\r\n    const [Loading, setLoading] = useState(true);\r\n    const [buttonLoading , setbuttonLoad] = useState(false);\r\n    // Handle data before loading componenent\r\n    useEffect(()=>{\r\n        Axios.get(\"http://localhost:9000/profiles/profile?userid=\"+notif.SenderId,{withCredentials : true})\r\n        .then(result =>{\r\n            console.log(result.data.profile);\r\n            setData(result.data.profile);\r\n            setLoading(false);\r\n        })\r\n        .catch(err =>console.log(err))\r\n    },[])\r\n    // ----------------------------\r\n\r\n    // When accept the request handler \r\n    const HandleAccept= ()=>{\r\n        \r\n    }\r\n    if (Loading) {\r\n        return null\r\n    } else {\r\n        return(\r\n            <div className=\"NotifCard\">\r\n                <p><strong style={{color : '#0C72BF'}}>Ce client</strong> souhaite réserver une réunion à <strong style={{color : '#0C72BF'}}>{notif.horraire}</strong></p>\r\n                <div className=\"Card_Head\">\r\n                    <div className=\"ProfileImg\">\r\n                        <img src={Data.Usrimg} />\r\n                    </div>\r\n                    <div className=\"ProfileInfo\">\r\n                        <a href={\"/Profiles/\"+notif.SenderId} className=\"profileLink\"><h3>{Data.companyname}</h3></a>\r\n                    </div>\r\n                </div>\r\n                <div className=\"Card_Body\">\r\n                    <h3>Message</h3>\r\n                    <p>\r\n                    {!isFull ? notif.Message.substr(0, 150) : notif.Message}\r\n                    {!isFull ? (<span className=\"more\" onClick={()=>setFulltext(true)}>Voir plus</span>):\"\"}\r\n                    </p>\r\n                </div>\r\n                <div className=\"Card_footer\">\r\n                    {notif.AcceptStatus === null &&(\r\n                        <>\r\n                        <Popconfirm\r\n                            title=\"Are you sure delete this task?\"\r\n                           \r\n                            okButtonProps={\r\n                                <Button  key=\"submit\" type=\"primary\" loading={buttonLoading} style={{borderRadius :'10px', fontFamily :'GlacialBold'}}>\r\n                                    Submit\r\n                                </Button>\r\n                            }\r\n                            cancelText=\"No\"\r\n                        >\r\n                            <button className=\"Accepter\" onClick={HandleAccept}>Accepter</button>\r\n                        </Popconfirm>\r\n                        \r\n                        <button className=\"Refuser\">Refuser</button>\r\n                        </>\r\n                    )}\r\n                    \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\nexport default NotifCard"]},"metadata":{},"sourceType":"module"}