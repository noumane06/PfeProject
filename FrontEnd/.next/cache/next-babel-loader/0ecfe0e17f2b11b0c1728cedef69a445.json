{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from 'react';\nimport Header from '../../components/header';\nimport Head from '../../components/head';\nimport Footer from '../../components/footer';\nimport './Scss/search.scss';\nimport { useRouter } from 'next/router';\nimport { Skeleton } from 'antd';\nimport axios from 'axios'; // ------------------------------------------------\n\nimport SearchCard from '../../components/SearchCard';\nimport SearchBar from '../../components/SearchBar'; //--------------------------------------------------\n\nvar Search = function Search(_ref) {\n  var qu = _ref.qu;\n\n  var _useState = useState(),\n      profiles = _useState[0],\n      setProfile = _useState[1];\n\n  var _useState2 = useState(false),\n      nodata = _useState2[0],\n      setnodata = _useState2[1];\n\n  var _useState3 = useState(true),\n      loading = _useState3[0],\n      setLoading = _useState3[1];\n\n  var router = useRouter();\n  useEffect(function () {\n    var Url = 'http://localhost:9000/profiles/search?companyname=' + qu.companyname + '&domaine=' + qu.domaine + '&city=' + qu.city + '&page=' + qu.page;\n    axios.get(Url).then(function (res) {\n      console.log(res);\n      setProfile(res.data);\n\n      if (res.data === \"\") {\n        setnodata(true);\n      }\n\n      setLoading(false);\n    })[\"catch\"](function (err) {\n      console.log(err);\n    });\n  }, []);\n\n  var handleCLick = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var newPage, Url;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLoading(true);\n\n              if (!(+qu.page < Math.round(profiles.count / 9) && +qu.page !== 0)) {\n                _context.next = 5;\n                break;\n              }\n\n              newPage = +qu.page + 1;\n              _context.next = 5;\n              return router.push('/Search?companyname=' + qu.companyname + '&domaine=' + qu.domaine + '&city=' + qu.city + '&page=' + newPage);\n\n            case 5:\n              Url = 'http://localhost:9000/profiles/search?companyname=' + qu.companyname + '&domaine=' + qu.domaine + '&city=' + qu.city + '&page=' + qu.page;\n              axios.get(Url).then(function (res) {\n                setProfile(res.data);\n\n                if (res.data === \"\") {\n                  setnodata(true);\n                }\n\n                setLoading(false);\n              })[\"catch\"](function (err) {\n                console.log(err);\n              });\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleCLick() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var handleBack = function handleBack() {\n    setLoading(true);\n    var newPage = +qu.page - 1;\n    router.push('/Search?companyname=' + qu.companyname + '&domaine=' + qu.domaine + '&city=' + qu.city + '&page=' + newPage);\n    var Url = 'http://localhost:9000/profiles/search?companyname=' + qu.companyname + '&domaine=' + qu.domaine + '&city=' + qu.city + '&page=' + qu.page;\n    axios.get(Url).then(function (res) {\n      setProfile(res.data);\n\n      if (res.data === \"\") {\n        setnodata(true);\n      }\n\n      setLoading(false);\n    })[\"catch\"](function (err) {\n      console.log(err);\n    });\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"body\"\n  }, __jsx(\"div\", {\n    className: \"ContentInside\"\n  }, __jsx(Head, {\n    title: \"Resulat de recherche | 6 solutions\"\n  }), __jsx(Header, null), __jsx(\"div\", {\n    className: \"searchPage\"\n  }, __jsx(SearchBar, {\n    searchItem: qu\n  })), __jsx(\"div\", {\n    className: \"loader\"\n  }, __jsx(Skeleton, {\n    loading: loading,\n    active: true,\n    avatar: true,\n    round: true,\n    className: \"sk\"\n  }, profiles !== undefined && __jsx(React.Fragment, null, profiles.profile !== undefined && __jsx(\"div\", {\n    className: \"CardContainer\"\n  }, profiles.profile.map(function (profile) {\n    return __jsx(React.Fragment, null, __jsx(SearchCard, {\n      key: profile._id,\n      className: \"SearchCard1\",\n      profile: profile\n    }));\n  })), nodata && __jsx(\"div\", {\n    className: \"Noresults\"\n  }, __jsx(\"img\", {\n    src: \"/static/Assets/No_comments.png\",\n    height: \"300\"\n  }), __jsx(\"h2\", null, \"Aucun r\\xE9sultat trouv\\xE9\"), __jsx(\"p\", null, \"Il semble que nous ne trouvons aucun r\\xE9sultat bas\\xE9 sur la recherche.\")), __jsx(\"div\", {\n    className: \"pagination\"\n  }, __jsx(\"button\", {\n    className: qu.page <= 1 || profiles.count === undefined ? \"disabled test\" : \"backPage test\",\n    onClick: handleBack\n  }, \"Pr\\xE9c\\xE9dent\"), profiles.count !== undefined && __jsx(\"span\", {\n    className: \"pageNumber test \"\n  }, qu.page, \" sur \", Math.round(profiles.count / 9) !== 0 ? Math.round(profiles.count / 9) : 1), profiles.count === undefined && __jsx(\"span\", {\n    className: \"pageNumber test \"\n  }, \"-\"), __jsx(\"button\", {\n    className: qu.page >= Math.round(profiles.count / 9) || profiles.count === undefined ? \"disabled test \" : \"nextPage test \",\n    onClick: handleCLick\n  }, \"Suivant\"))))))), !loading && __jsx(Footer, null));\n};\n\nSearch.getInitialProps = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_ref3) {\n    var query;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            query = _ref3.query;\n            return _context2.abrupt(\"return\", {\n              props: \"\",\n              qu: query\n            });\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n\nexport default Search;","map":null,"metadata":{},"sourceType":"module"}