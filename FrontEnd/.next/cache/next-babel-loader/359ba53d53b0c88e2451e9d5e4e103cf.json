{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Noumane agouzil\\\\Desktop\\\\Normane\\\\My projects\\\\PfeProject\\\\Front-End\\\\pages\\\\temoignages\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Header from '../../components/header';\nimport Head from '../../components/head';\nimport Footer from '../../components/footer';\nimport './scss/tem.scss';\nimport TemCard from './Components/TemCard';\nimport { useEffect, useState } from 'react';\nimport { Skeleton } from 'antd';\n\nvar Temoignages = function Temoignages(props) {\n  _s();\n\n  var _useState = useState(''),\n      Data = _useState[0],\n      setData = _useState[1];\n\n  var _useState2 = useState(true),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  useEffect(function () {\n    console.log(props);\n    setData(props.data);\n    setLoading(false);\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"body\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"ContentInside\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }\n  }, __jsx(Head, {\n    title: \"T\\xE9moignages | 6 solutions\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }), __jsx(Header, {\n    active: \"temoignages\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    className: \"proposBody\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, __jsx(\"h1\", {\n    className: \"title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 15\n    }\n  }, \"T\\xE9moignages\"), __jsx(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'space-between',\n      alignItems: 'baseline'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    className: \"tems\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 19\n    }\n  }), __jsx(\"div\", {\n    className: \"AddTem\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 19\n    }\n  }, __jsx(\"input\", {\n    className: \"TemButton\",\n    type: \"button\",\n    value: \"Ajouter un t\\xE9moignage\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 21\n    }\n  }))), __jsx(Skeleton, {\n    loading: loading,\n    active: true,\n    avatar: true,\n    round: true,\n    className: \"sk\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 15\n    }\n  }, !loading && __jsx(\"div\", {\n    className: \"TemCards\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, Data.map(function (temData) {\n    return __jsx(TemCard, {\n      props: temData,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 41\n      }\n    });\n  })))))), __jsx(Footer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }));\n};\n\n_s(Temoignages, \"55/tQh8M8cL5lXGj3MmmUJHCmtE=\");\n\n_c = Temoignages;\nexport var __N_SSP = true;\nexport default Temoignages;\n\nvar _c;\n\n$RefreshReg$(_c, \"Temoignages\");","map":{"version":3,"sources":["C:/Users/Noumane agouzil/Desktop/Normane/My projects/PfeProject/Front-End/pages/temoignages/index.jsx"],"names":["Header","Head","Footer","TemCard","useEffect","useState","Skeleton","Temoignages","props","Data","setData","loading","setLoading","console","log","data","display","justifyContent","alignItems","map","temData"],"mappings":";;;;;;AAAA,OAAOA,MAAP,MAAmB,yBAAnB;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAO,iBAAP;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAAQC,SAAR,EAAoBC,QAApB,QAAmC,OAAnC;AACA,SAASC,QAAT,QAAyB,MAAzB;;AACA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAS;AAAA;;AAAA,kBAGFH,QAAQ,CAAC,EAAD,CAHN;AAAA,MAGlBI,IAHkB;AAAA,MAGbC,OAHa;;AAAA,mBAIIL,QAAQ,CAAC,IAAD,CAJZ;AAAA,MAIlBM,OAJkB;AAAA,MAIVC,UAJU;;AAKzBR,EAAAA,SAAS,CAAC,YAAI;AACNS,IAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;AACAE,IAAAA,OAAO,CAACF,KAAK,CAACO,IAAP,CAAP;AACAH,IAAAA,UAAU,CAAC,KAAD,CAAV;AACP,GAJQ,EAIP,EAJO,CAAT;AAMA,SACE,4BACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAC,8BAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,MAAD;AAAQ,IAAA,MAAM,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AAAI,IAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,EAGE;AAAK,IAAA,KAAK,EAAE;AAACI,MAAAA,OAAO,EAAG,MAAX;AAAkBC,MAAAA,cAAc,EAAG,eAAnC;AAAmDC,MAAAA,UAAU,EAAG;AAAhE,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,SAAS,EAAC,WAAjB;AAA6B,IAAA,IAAI,EAAC,QAAlC;AAA2C,IAAA,KAAK,EAAC,0BAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFJ,CAHF,EASE,MAAC,QAAD;AAAU,IAAA,OAAO,EAAEP,OAAnB;AAA4B,IAAA,MAAM,EAAE,IAApC;AAA0C,IAAA,MAAM,EAAE,IAAlD;AAAwD,IAAA,KAAK,MAA7D;AAA+D,IAAA,SAAS,EAAC,IAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,CAACA,OAAD,IACC;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,IAAI,CAACU,GAAL,CAAS,UAAAC,OAAO;AAAA,WAAG,MAAC,OAAD;AAAS,MAAA,KAAK,EAAEA,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAH;AAAA,GAAhB,CADL,CAFF,CATF,CAHF,CADF,CADF,EA0BE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA1BF,CADF;AA8BH,CAzCD;;GAAMb,W;;KAAAA,W;;AA+DN,eAAeA,WAAf","sourcesContent":["import Header from '../../components/header';\r\nimport Head from '../../components/head';\r\nimport Footer from '../../components/footer';\r\nimport './scss/tem.scss';\r\nimport TemCard from './Components/TemCard';\r\nimport {useEffect , useState} from 'react';\r\nimport { Skeleton } from 'antd';\r\nconst Temoignages = (props)=>{\r\n\r\n\r\n    const [Data,setData] = useState('');\r\n    const [loading,setLoading] = useState(true);\r\n    useEffect(()=>{\r\n            console.log(props);\r\n            setData(props.data);\r\n            setLoading(false);\r\n    },[])\r\n    \r\n    return (\r\n      <>\r\n        <div className=\"body\">\r\n          <div className=\"ContentInside\">\r\n            <Head title=\"Témoignages | 6 solutions\" />\r\n            <Header active=\"temoignages\" />\r\n            <div className=\"proposBody\">\r\n            \r\n              <h1 className=\"title\">Témoignages</h1>\r\n              <div style={{display : 'flex',justifyContent : 'space-between',alignItems : 'baseline'}}>\r\n                  <div className=\"tems\"></div>\r\n                  <div className=\"AddTem\">\r\n                    <input className=\"TemButton\" type=\"button\" value=\"Ajouter un témoignage\" />\r\n                  </div>\r\n              </div>\r\n              <Skeleton loading={loading} active={true} avatar={true} round  className='sk'>\r\n              {!loading &&(\r\n                <div className=\"TemCards\">\r\n                    {Data.map(temData =><TemCard props={temData}/>)}\r\n                </div> \r\n              )}\r\n                \r\n              </Skeleton>              \r\n              \r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Footer />\r\n      </>\r\n    );\r\n}\r\nexport const getServerSideProps = async (ctx) => {\r\n    try {\r\n        const url = \"http://localhost:9000/temoin/\" ;\r\n        const res = await fetch(url); \r\n        const statusCode = res.status;\r\n        const data = await res.json();\r\n        \r\n        if (statusCode !== 200) {\r\n            throw statusCode \r\n        }\r\n        return  {\r\n            props : {data }\r\n        }\r\n    } \r\n    catch (error) {\r\n        ctx.res.statusCode = error;\r\n        return {\r\n               props : {statusCode : error}\r\n        };\r\n    }   \r\n  }\r\nexport default Temoignages ;"]},"metadata":{},"sourceType":"module"}