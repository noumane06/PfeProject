{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport Header from '../../components/header';\nimport Head from '../../components/head';\nimport Footer from '../../components/footer';\nimport './scss/tem.scss';\nimport TemCard from './Components/TemCard';\nimport { useEffect, useState } from 'react';\nimport { Skeleton, Modal, Button, notification } from 'antd';\nimport Axios from 'axios';\n\nconst Temoignages = props => {\n  const {\n    0: Data,\n    1: setData\n  } = useState();\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(true);\n  const {\n    0: id,\n    1: setUserID\n  } = useState(null);\n  const {\n    0: temoign,\n    1: setTemoign\n  } = useState(false);\n  const {\n    0: buttonLoading,\n    1: setbuttonLoading\n  } = useState(false);\n  const {\n    0: linkErr,\n    1: setLinkErr\n  } = useState(false);\n  const {\n    0: link,\n    1: setLink\n  } = useState('');\n  useEffect(() => {\n    console.log(props);\n    setData(props.data.data);\n    setLoading(false);\n  }, []);\n\n  function validVideoId(id) {\n    var img = new Image();\n    img.src = \"http://img.youtube.com/vi/\" + id + \"/mqdefault.jpg\";\n\n    img.onload = function () {\n      checkThumbnail(this.width);\n    };\n  }\n\n  function checkThumbnail(width) {\n    //HACK a mq thumbnail has width of 320.\n    //if the video does not exist(therefore thumbnail don't exist), a default thumbnail of 120 width is returned.\n    console.log(width);\n\n    if (width === 120) {\n      setLinkErr(true);\n      setbuttonLoading(false);\n    } else {\n      Axios.post(\"http://15.237.56.214:9000/temoin/\", {\n        link: link\n      }, {\n        withCredentials: true\n      }).then(res => {\n        notification['success']({\n          message: 'Succès',\n          description: 'Votre Témoignage a été ajouté avec succès '\n        });\n        setTimeout(() => {\n          setbuttonLoading(false);\n          setTemoign(false);\n          window.location.reload();\n        }, 2000);\n      }).catch(err => {\n        console.log(err);\n        notification['error']({\n          message: \"Une erreur s'est produite\",\n          description: 'Veuillez réessayer plus tard'\n        });\n        setTimeout(() => {\n          setbuttonLoading(false);\n          setTemoign(false);\n          window.location.reload();\n        }, 2000);\n      });\n    }\n  }\n\n  const handleClick = () => {\n    setbuttonLoading(true);\n    const check = link.split(\"v=\");\n\n    if (check[0] == \"https://www.youtube.com/watch?\" || check[0] == \"www.youtube.com/watch?\" || check[0] == \"youtube.com/watch?\") {\n      validVideoId(check[1]);\n    } else {\n      setLinkErr(true);\n      setbuttonLoading(false);\n    }\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"body\"\n  }, __jsx(\"div\", {\n    className: \"ContentInside\"\n  }, __jsx(Modal, {\n    title: \"T\\xE9moignage vid\\xE9o\",\n    visible: temoign,\n    width: \"60%\",\n    onCancel: () => setTemoign(false),\n    footer: [__jsx(Button, {\n      disabled: false,\n      key: \"submit\",\n      type: \"primary\",\n      loading: buttonLoading,\n      style: {\n        borderRadius: '10px',\n        fontFamily: 'GlacialBold'\n      },\n      onClick: handleClick\n    }, \"Termin\\xE9 !\")]\n  }, __jsx(\"label\", {\n    style: {\n      color: '#318CE7',\n      fontFamily: 'GlacialBold',\n      fontSize: '16px'\n    }\n  }, \"Ajoutez votre lien Youtube :\"), __jsx(\"br\", null), __jsx(\"input\", {\n    className: linkErr ? \"input error\" : \"input\",\n    type: \"text\",\n    placeholder: \"Ex : https://www.youtube.com/watch?v=5qap5aO4i9A \",\n    value: link,\n    onChange: e => {\n      setLink(e.target.value);\n      setLinkErr(false);\n    }\n  }), __jsx(\"br\", null), __jsx(\"label\", {\n    className: linkErr ? \"errMsg\" : \"hidden\"\n  }, \"Ce lien n'est pas valide, veuillez fournir un lien valide\"), __jsx(\"br\", null)), __jsx(Head, {\n    title: \"T\\xE9moignages | 6 solutions\"\n  }), __jsx(Header, {\n    active: \"temoignages\",\n    setUserID: setUserID\n  }), __jsx(\"div\", {\n    className: \"proposBody\"\n  }, __jsx(\"h1\", {\n    className: \"title\"\n  }, \"T\\xE9moignages\"), __jsx(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      alignItems: \"baseline\"\n    }\n  }, __jsx(\"div\", {\n    className: \"tems\"\n  }), id !== null && __jsx(\"div\", {\n    className: \"AddTem\"\n  }, __jsx(\"input\", {\n    className: \"TemButton\",\n    type: \"button\",\n    value: \"Ajouter un t\\xE9moignage\",\n    onClick: () => setTemoign(true)\n  }))), __jsx(Skeleton, {\n    loading: loading,\n    active: true,\n    avatar: true,\n    round: true,\n    className: \"sk\"\n  }, Data !== undefined && __jsx(\"div\", {\n    className: \"TemCards\"\n  }, Data.map(temData => __jsx(TemCard, {\n    key: temData.temid,\n    props: temData\n  }))))))), __jsx(Footer, null));\n};\n\nexport const getServerSideProps = async ctx => {\n  try {\n    const url = \"http://15.237.56.214:9000/temoin/\";\n    const res = await fetch(url);\n    const statusCode = res.status;\n    const data = await res.json();\n\n    if (statusCode !== 200) {\n      throw statusCode;\n    }\n\n    return {\n      props: {\n        data\n      }\n    };\n  } catch (error) {\n    ctx.res.statusCode = error;\n    return {\n      props: {\n        statusCode: error\n      }\n    };\n  }\n};\nexport default Temoignages;","map":null,"metadata":{},"sourceType":"module"}