{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Noumane agouzil\\\\Desktop\\\\Normane\\\\My projects\\\\PfeProject\\\\Front-End\\\\pages\\\\Profiles\\\\index.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Header from '../../components/header';\nimport Head from '../../components/head';\nimport axios from 'axios';\nimport { useEffect } from 'react';\nimport jwt from 'jsonwebtoken';\n/*\r\nexport async function getStaticProps() {\r\n    \r\n        // Call an external API endpoint to get posts.\r\n    // You can use any data fetching library\r\n    \r\n    const token = window.localStorage.getItem(\"Tokens\");\r\n    var decoded =   jwt.verify(token,\"secret\",function (err , decoded) {\r\n        if (!err) {\r\n            return decoded.userId ;\r\n        }\r\n    });\r\n    console.log(decoded);\r\n    var url = \"http://localhost:9000/profiles/myprofile?userid=\"+decoded ;\r\n    const res = await fetch(url)\r\n    const posts = await res.json()\r\n    \r\n    // By returning { props: posts }, the Blog component\r\n    // will receive `posts` as a prop at build time\r\n    return {\r\n        props: {\r\n        posts,\r\n        },\r\n    }\r\n}*/\n\nvar Profile = function Profile(_ref) {\n  var decoded = _ref.decoded;\n\n  /*const nom = posts.response.profiles[0].nom ; \r\n  const prenom = posts.response.profiles[0].prenom ; \r\n  const companyname = posts.response.profiles[0].companyname ; \r\n  const string = \"Bonsoir \"+nom+\" \"+prenom+\", Votre societe est \"+companyname ;*/\n  var string = decoded.userid;\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, __jsx(Header, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }), __jsx(Head, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }), string);\n};\n\n_c = Profile;\nProfile.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  var token, decoded;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          token = window.localStorage.getItem(\"Tokens\");\n          decoded = jwt.verify(token, \"secret\", function (err, decoded) {\n            if (!err) {\n              return decoded;\n            }\n          });\n          return _context.abrupt(\"return\", {\n            props: {\n              decoded: decoded\n            }\n          });\n\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["C:/Users/Noumane agouzil/Desktop/Normane/My projects/PfeProject/Front-End/pages/Profiles/index.js"],"names":["Header","Head","axios","useEffect","jwt","Profile","decoded","string","userid","getInitialProps","token","window","localStorage","getItem","verify","err","props"],"mappings":";;;;;;;;AAAA,OAAOA,MAAP,MAAmB,yBAAnB;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,QAAwB,OAAxB;AACA,OAAOC,GAAP,MAAgB,cAAhB;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAAa;AAAA,MAAXC,OAAW,QAAXA,OAAW;;AACzB;;;;AAIA,MAAMC,MAAM,GAAGD,OAAO,CAACE,MAAvB;AACA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGKD,MAHL,CADJ;AAOH,CAbD;;KAAMF,O;AAeNA,OAAO,CAACI,eAAR,yEAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAChBC,UAAAA,KADgB,GACRC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,QAA5B,CADQ;AAElBP,UAAAA,OAFkB,GAENF,GAAG,CAACU,MAAJ,CAAWJ,KAAX,EAAiB,QAAjB,EAA0B,UAAUK,GAAV,EAAgBT,OAAhB,EAAyB;AAC/D,gBAAI,CAACS,GAAL,EAAU;AACN,qBAAOT,OAAP;AACH;AACJ,WAJe,CAFM;AAAA,2CAOhB;AACFU,YAAAA,KAAK,EAAG;AACJV,cAAAA,OAAO,EAAPA;AADI;AADN,WAPgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA1B;AAaA,eAAeD,OAAf","sourcesContent":["import Header from '../../components/header';\r\nimport Head from '../../components/head';\r\nimport axios from 'axios'; \r\nimport {useEffect} from 'react'\r\nimport jwt from 'jsonwebtoken';\r\n\r\n/*\r\nexport async function getStaticProps() {\r\n    \r\n        // Call an external API endpoint to get posts.\r\n    // You can use any data fetching library\r\n    \r\n    const token = window.localStorage.getItem(\"Tokens\");\r\n    var decoded =   jwt.verify(token,\"secret\",function (err , decoded) {\r\n        if (!err) {\r\n            return decoded.userId ;\r\n        }\r\n    });\r\n    console.log(decoded);\r\n    var url = \"http://localhost:9000/profiles/myprofile?userid=\"+decoded ;\r\n    const res = await fetch(url)\r\n    const posts = await res.json()\r\n    \r\n    // By returning { props: posts }, the Blog component\r\n    // will receive `posts` as a prop at build time\r\n    return {\r\n        props: {\r\n        posts,\r\n        },\r\n    }\r\n}*/\r\nconst Profile = ({decoded})=>{\r\n    /*const nom = posts.response.profiles[0].nom ; \r\n    const prenom = posts.response.profiles[0].prenom ; \r\n    const companyname = posts.response.profiles[0].companyname ; \r\n    const string = \"Bonsoir \"+nom+\" \"+prenom+\", Votre societe est \"+companyname ;*/\r\n    const string = decoded.userid ;\r\n    return(\r\n        <div>\r\n            <Header/>\r\n            <Head/>\r\n            {string}\r\n        </div>\r\n    )\r\n}\r\n\r\nProfile.getInitialProps = async()=>{\r\n    const token = window.localStorage.getItem(\"Tokens\");\r\n    var decoded =   jwt.verify(token,\"secret\",function (err , decoded) {\r\n        if (!err) {\r\n            return decoded ;\r\n        }\r\n    });\r\n    return{\r\n        props : {\r\n            decoded\r\n        }\r\n    }\r\n}\r\nexport default Profile ;"]},"metadata":{},"sourceType":"module"}