{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Noumane agouzil\\\\Desktop\\\\Normane\\\\My projects\\\\PfeProject\\\\Front-End\\\\pages\\\\test\\\\index.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport { ViewState } from '@devexpress/dx-react-scheduler';\nimport { Scheduler, WeekView, Appointments } from '@devexpress/dx-react-scheduler-material-ui';\nimport { withStyles } from '@material-ui/core/styles';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\n\nconst style = theme => ({\n  todayCell: {\n    backgroundColor: fade(theme.palette.primary.main, 0.1),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.primary.main, 0.14)\n    },\n    '&:focus': {\n      backgroundColor: fade(theme.palette.primary.main, 0.16)\n    }\n  },\n  weekendCell: {\n    backgroundColor: fade(theme.palette.action.disabledBackground, 0.04),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.action.disabledBackground, 0.04)\n    },\n    '&:focus': {\n      backgroundColor: fade(theme.palette.action.disabledBackground, 0.04)\n    }\n  },\n  today: {\n    backgroundColor: fade(theme.palette.primary.main, 0.16)\n  },\n  weekend: {\n    backgroundColor: fade(theme.palette.action.disabledBackground, 0.06)\n  }\n});\n\nconst TimeTableCellBase = (_ref) => {\n  let {\n    classes\n  } = _ref,\n      restProps = _objectWithoutProperties(_ref, [\"classes\"]);\n\n  const {\n    startDate\n  } = restProps;\n  const date = new Date(startDate);\n\n  if (date.getDate() === new Date().getDate()) {\n    return __jsx(WeekView.TimeTableCell, _extends({}, restProps, {\n      className: classes.todayCell,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 12\n      }\n    }));\n  }\n\n  if (date.getDay() === 0 || date.getDay() === 6) {\n    return __jsx(WeekView.TimeTableCell, _extends({}, restProps, {\n      className: classes.weekendCell,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 12\n      }\n    }));\n  }\n\n  return __jsx(WeekView.TimeTableCell, _extends({}, restProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 12\n    }\n  }));\n};\n\nconst TimeTableCell = withStyles(style, {\n  name: 'TimeTableCell'\n})(TimeTableCellBase);\n\nconst DayScaleCellBase = (_ref2) => {\n  let {\n    classes\n  } = _ref2,\n      restProps = _objectWithoutProperties(_ref2, [\"classes\"]);\n\n  const {\n    startDate,\n    today\n  } = restProps;\n\n  if (today) {\n    return __jsx(WeekView.DayScaleCell, _extends({}, restProps, {\n      className: classes.today,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 12\n      }\n    }));\n  }\n\n  if (startDate.getDay() === 0 || startDate.getDay() === 6) {\n    return __jsx(WeekView.DayScaleCell, _extends({}, restProps, {\n      className: classes.weekend,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 12\n      }\n    }));\n  }\n\n  return __jsx(WeekView.DayScaleCell, _extends({}, restProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 12\n    }\n  }));\n};\n\nconst DayScaleCell = withStyles(style, {\n  name: 'DayScaleCell'\n})(DayScaleCellBase);\nconst schedulerData = [{\n  startDate: '2018-11-01T09:45',\n  endDate: '2018-11-01T11:00',\n  title: 'Meeting'\n}, {\n  startDate: '2018-11-01T12:00',\n  endDate: '2018-11-01T13:30',\n  title: 'Go to a gym'\n}];\nexport default class Demo extends React.PureComponent {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return __jsx(Paper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }\n    }, __jsx(Scheduler, {\n      data: schedulerData,\n      height: 660,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }, __jsx(ViewState, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    }), __jsx(WeekView, {\n      startDayHour: 9,\n      endDayHour: 19,\n      timeTableCellComponent: TimeTableCell,\n      dayScaleCellComponent: DayScaleCell,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    }), __jsx(Appointments, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Noumane agouzil/Desktop/Normane/My projects/PfeProject/Front-End/pages/test/index.js"],"names":["React","Paper","ViewState","Scheduler","WeekView","Appointments","withStyles","fade","style","theme","todayCell","backgroundColor","palette","primary","main","weekendCell","action","disabledBackground","today","weekend","TimeTableCellBase","classes","restProps","startDate","date","Date","getDate","getDay","TimeTableCell","name","DayScaleCellBase","DayScaleCell","schedulerData","endDate","title","Demo","PureComponent","constructor","props","render"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { ViewState } from '@devexpress/dx-react-scheduler';\r\nimport {\r\n  Scheduler,\r\n  WeekView,\r\n  Appointments,\r\n} from '@devexpress/dx-react-scheduler-material-ui';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { fade } from '@material-ui/core/styles/colorManipulator';\r\n\r\nconst style = theme => ({\r\n  todayCell: {\r\n    backgroundColor: fade(theme.palette.primary.main, 0.1),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.primary.main, 0.14),\r\n    },\r\n    '&:focus': {\r\n      backgroundColor: fade(theme.palette.primary.main, 0.16),\r\n    },\r\n  },\r\n  weekendCell: {\r\n    backgroundColor: fade(theme.palette.action.disabledBackground, 0.04),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.action.disabledBackground, 0.04),\r\n    },\r\n    '&:focus': {\r\n      backgroundColor: fade(theme.palette.action.disabledBackground, 0.04),\r\n    },\r\n  },\r\n  today: {\r\n    backgroundColor: fade(theme.palette.primary.main, 0.16),\r\n  },\r\n  weekend: {\r\n    backgroundColor: fade(theme.palette.action.disabledBackground, 0.06),\r\n  },\r\n});\r\n\r\nconst TimeTableCellBase = ({ classes, ...restProps }) => {\r\n  const { startDate } = restProps;\r\n  const date = new Date(startDate);\r\n  if (date.getDate() === new Date().getDate()) {\r\n    return <WeekView.TimeTableCell {...restProps} className={classes.todayCell} />;\r\n  } if (date.getDay() === 0 || date.getDay() === 6) {\r\n    return <WeekView.TimeTableCell {...restProps} className={classes.weekendCell} />;\r\n  } return <WeekView.TimeTableCell {...restProps} />;\r\n};\r\n\r\nconst TimeTableCell = withStyles(style, { name: 'TimeTableCell' })(TimeTableCellBase);\r\n\r\nconst DayScaleCellBase = ({ classes, ...restProps }) => {\r\n  const { startDate, today } = restProps;\r\n  if (today) {\r\n    return <WeekView.DayScaleCell {...restProps} className={classes.today} />;\r\n  } if (startDate.getDay() === 0 || startDate.getDay() === 6) {\r\n    return <WeekView.DayScaleCell {...restProps} className={classes.weekend} />;\r\n  } return <WeekView.DayScaleCell {...restProps} />;\r\n};\r\n\r\nconst DayScaleCell = withStyles(style, { name: 'DayScaleCell' })(DayScaleCellBase);\r\nconst schedulerData = [\r\n  { startDate: '2018-11-01T09:45', endDate: '2018-11-01T11:00', title: 'Meeting' },\r\n  { startDate: '2018-11-01T12:00', endDate: '2018-11-01T13:30', title: 'Go to a gym' },\r\n];\r\nexport default class Demo extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <Paper>\r\n        <Scheduler\r\n          data={schedulerData}\r\n          height={660}\r\n        >\r\n          <ViewState />\r\n          <WeekView\r\n            startDayHour={9}\r\n            endDayHour={19}\r\n            timeTableCellComponent={TimeTableCell}\r\n            dayScaleCellComponent={DayScaleCell}\r\n          />\r\n          <Appointments />\r\n        </Scheduler>\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}