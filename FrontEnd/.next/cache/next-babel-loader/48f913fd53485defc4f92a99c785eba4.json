{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Noumane agouzil\\\\Desktop\\\\Normane\\\\My projects\\\\PfeProject\\\\Front-End\\\\pages\\\\Profiles\\\\Components\\\\BookMeeting.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Modal from 'antd/lib/modal/Modal';\nimport { useState } from 'react';\nimport moment from 'moment';\nimport { Button } from 'antd';\n\nconst Scheduler = (StartHour, endtHour, length) => {\n  const results = [];\n\n  for (let i = 0; i <= parseInt(length); i++) {\n    const string = StartHour.format('HH:mm') + \"-\" + StartHour.add(30, 'minutes').format('HH:mm'); // Break betweeen meetings\n\n    results.push(string);\n\n    if (Math.abs(moment.duration(StartHour.diff(endtHour)).asMinutes()) <= 30) {\n      break;\n    }\n\n    StartHour.add(15, 'minutes');\n  }\n\n  return results;\n};\n\nconst calendar = () => {\n  //Data from database \n  const date = new Date();\n  const datess = new Date('9/10/2020');\n  const Booked = {\n    [datess]: ['08:00-08:30', '11:45-12:15']\n  };\n  const Horraire = ['08:00', '17:15'];\n  const StartHour = moment(Horraire[0], \"HH:mm\");\n  const endtHour = moment(Horraire[1], \"HH:mm\");\n  const length = (endtHour.format(\"HH\") - StartHour.format(\"HH\")) * 60 / 45;\n  const results = Scheduler(StartHour, endtHour, length); // States -------------------\n\n  const {\n    0: visible,\n    1: setvisible\n  } = useState(false);\n  const {\n    0: title,\n    1: setTitle\n  } = useState(); // -----------------------\n\n  const Days = ['Lundi', 'Mardi', 'Mercredi', 'Jeudi', 'Vendredi', 'Samedi', 'Dimanche'];\n  const dayResult = [];\n  const numberedResult = [];\n  dayResult.push(moment(Date.now()).format('YYYY/MM/DD'));\n\n  for (let i = 0; i < 6; i++) {\n    date.setDate(date.getDate() + 1);\n    dayResult.push(moment(date).format('YYYY/MM/DD'));\n  }\n\n  console.log(dayResult);\n  const Hours = results;\n  return __jsx(\"table\", {\n    id: \"customers\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, __jsx(Modal, {\n    title: title,\n    visible: visible,\n    width: \"50vw\",\n    onCancel: () => setvisible(false),\n    footer: [__jsx(Button, {\n      disabled: false,\n      key: \"submit\",\n      type: \"primary\",\n      style: {\n        borderRadius: '10px',\n        fontFamily: 'GlacialBold'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 29\n      }\n    }, \"Submit\")],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, \"Hello\"), __jsx(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, __jsx(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }), dayResult.map((day, index) => __jsx(\"th\", {\n    key: day + Date.now(),\n    style: numberedResult[index] === date.getDate() ? {\n      color: '#1a73e8',\n      textAlign: \"center\"\n    } : {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 51\n    }\n  }, day, \" \", __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 203\n    }\n  }), \" \", numberedResult[index])))), __jsx(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, Hours.map(hour => __jsx(\"tr\", {\n    key: hour + Date.now(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }, __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 25\n    }\n  }, hour), dayResult.map((day, index) => __jsx(\"td\", {\n    key: day + hour,\n    onClick: () => {\n      setTitle(hour + \" | \" + day + \" | \" + numberedResult[index]);\n      setvisible(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 25\n    }\n  }, Booked[day] !== undefined && (Booked[day].includes(hour) ? 'Booked' : '')))))));\n};\n\nexport default calendar;","map":{"version":3,"sources":["C:/Users/Noumane agouzil/Desktop/Normane/My projects/PfeProject/Front-End/pages/Profiles/Components/BookMeeting.jsx"],"names":["Modal","useState","moment","Button","Scheduler","StartHour","endtHour","length","results","i","parseInt","string","format","add","push","Math","abs","duration","diff","asMinutes","calendar","date","Date","datess","Booked","Horraire","visible","setvisible","title","setTitle","Days","dayResult","numberedResult","now","setDate","getDate","console","log","Hours","borderRadius","fontFamily","map","day","index","color","textAlign","hour","undefined","includes"],"mappings":"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","sourcesContent":["\r\nimport Modal from 'antd/lib/modal/Modal';\r\nimport {useState} from 'react';\r\nimport moment from 'moment';\r\nimport { Button } from 'antd';\r\nconst Scheduler =  (StartHour , endtHour , length )=>{\r\n    const results = [];\r\n     for (let i = 0; i <= parseInt(length) ; i++) {\r\n        const string  =  StartHour.format('HH:mm')+\"-\"+StartHour.add(30,'minutes').format('HH:mm') ;\r\n\r\n        // Break betweeen meetings\r\n         results.push(string);\r\n        if (Math.abs(moment.duration(StartHour.diff(endtHour)).asMinutes()) <= 30 ) {\r\n            break ;\r\n        }\r\n        \r\n         StartHour.add(15,'minutes');\r\n    }\r\n    return(results);\r\n}\r\n\r\nconst calendar = ()=>{\r\n\r\n    //Data from database \r\n    const date = new Date();\r\n    const datess = new Date('9/10/2020');\r\n    const Booked = { [datess] : ['08:00-08:30','11:45-12:15']}\r\n    const Horraire = ['08:00','17:15'];\r\n    const StartHour = moment(Horraire[0],\"HH:mm\");\r\n    const endtHour = moment(Horraire[1],\"HH:mm\");\r\n    const length = (endtHour.format(\"HH\")-StartHour.format(\"HH\"))*60/45;\r\n    \r\n    const results = Scheduler(StartHour,endtHour,length);\r\n    // States -------------------\r\n    const [visible,setvisible] = useState(false);\r\n    const [title , setTitle] = useState();\r\n    // -----------------------\r\n    const Days = ['Lundi','Mardi','Mercredi','Jeudi','Vendredi','Samedi','Dimanche'];\r\n    const dayResult = [];\r\n    const numberedResult = [];\r\n    dayResult.push(moment(Date.now()).format('YYYY/MM/DD'))\r\n    for (let i = 0 ; i < 6; i++) {\r\n        date.setDate(date.getDate()+1);\r\n        dayResult.push(moment(date).format('YYYY/MM/DD'));\r\n    }\r\n    console.log(dayResult);\r\n    const Hours = results;\r\n    return(\r\n        <table id=\"customers\">\r\n            <Modal title={title} visible={visible} width=\"50vw\" onCancel={()=>setvisible(false)}  footer={[\r\n                            <Button disabled={false} key=\"submit\" type=\"primary\"  style={{borderRadius :'10px', fontFamily :'GlacialBold'}}  >\r\n                                Submit\r\n                            </Button>\r\n                            ]}>Hello</Modal>\r\n            <thead>\r\n            \r\n                <tr>\r\n                    <th></th>\r\n                    {dayResult.map((day,index) =>(<th key={day+Date.now()}  style={numberedResult[index] === date.getDate() ? {color : '#1a73e8' , textAlign : \"center\"} : {textAlign : \"center\"}} >{day} <br/> {numberedResult[index]}</th>))}\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {Hours.map(hour => (\r\n                    <tr key={hour+Date.now()}> \r\n                        <th>{hour}</th>\r\n                        {dayResult.map((day,index) =>(\r\n                        <td key={day+hour} onClick={()=>{setTitle(hour+\" | \"+day+\" | \"+numberedResult[index]); setvisible(true)}}>\r\n                            {Booked[day] !== undefined &&(\r\n                                Booked[day].includes(hour) ? 'Booked' : ''\r\n                            )}\r\n                        </td>))}\r\n                    </tr>\r\n                ))}\r\n            </tbody>\r\n            \r\n        </table>\r\n    )\r\n}\r\nexport default calendar ;"]},"metadata":{},"sourceType":"module"}