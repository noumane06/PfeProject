{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Noumane agouzil\\\\Desktop\\\\Normane\\\\My projects\\\\PfeProject\\\\Front-End\\\\pages\\\\Profiles\\\\[_id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport { useState, useEffect } from 'react';\nimport jwt from 'jsonwebtoken';\nimport MyProfile from './Components/myProfile';\nimport PublicProfile from './Components/publicProfile';\n\nconst Profile = ({\n  data\n}) => {\n  const router = useRouter();\n  const profile = data.profile[0];\n  const {\n    0: userid,\n    1: setData\n  } = useState();\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(true);\n  useEffect(() => {\n    const token = window.localStorage.getItem(\"Tokens\");\n    jwt.verify(token, \"secret\", function (err, decoded) {\n      if (!err) {\n        setData(decoded.userId);\n        setLoading(false);\n      } else {\n        console.log(err);\n        const location = \"/Auth/Signin/?ref=tokenexpired&location=\" + window.location.href;\n        window.location.replace(location);\n      }\n    });\n  }, []);\n\n  if (loading) {\n    return __jsx(React.Fragment, null, __jsx(Head, {\n      title: \"Loading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }\n    }), __jsx(\"div\", {\n      style: {\n        position: 'fixed',\n        top: '50%',\n        left: '50%',\n        marginTop: '-50px',\n        marginLeft: '-50px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    }, __jsx(Spin, {\n      size: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }\n    })));\n  } else {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, userid === profile._id && __jsx(MyProfile, {\n      profile: profile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 25\n      }\n    }), userid !== profile._id && __jsx(PublicProfile, {\n      profile: profile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 25\n      }\n    }));\n  }\n};\n\nexport async function getStaticPaths() {\n  const res = await fetch(\"http://localhost:9000/profiles/\");\n  const data = await res.json();\n  var paths = [];\n  data.response.profiles.map(profile => {\n    paths.push({\n      params: {\n        _id: profile._id\n      }\n    });\n  });\n  return {\n    paths,\n    fallback: false\n  };\n}\nexport async function getStaticProps({\n  params\n}) {\n  const url = \"http://localhost:9000/profiles/profile?userid=\" + params._id;\n  const res = await fetch(url);\n  const data = await res.json();\n  return {\n    props: {\n      data\n    }\n  };\n}\nexport default Profile;","map":{"version":3,"sources":["C:/Users/Noumane agouzil/Desktop/Normane/My projects/PfeProject/Front-End/pages/Profiles/[_id].js"],"names":["useRouter","useState","useEffect","jwt","MyProfile","PublicProfile","Profile","data","router","profile","userid","setData","loading","setLoading","token","window","localStorage","getItem","verify","err","decoded","userId","console","log","location","href","replace","position","top","left","marginTop","marginLeft","_id","getStaticPaths","res","fetch","json","paths","response","profiles","map","push","params","fallback","getStaticProps","url","props"],"mappings":"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","sourcesContent":["\r\nimport { useRouter } from 'next/router';\r\nimport {useState , useEffect} from 'react';\r\nimport jwt from 'jsonwebtoken';\r\nimport MyProfile from './Components/myProfile';\r\nimport PublicProfile from './Components/publicProfile';\r\n\r\nconst Profile = ({data})=>{\r\n    const router = useRouter();\r\n    const profile = data.profile[0];\r\n    \r\n    const [userid,setData] = useState();\r\n    const [loading,setLoading] = useState(true);\r\n\r\n    useEffect(()=>{\r\n        const token = window.localStorage.getItem(\"Tokens\");\r\n        jwt.verify(token,\"secret\",function (err , decoded) {\r\n            if (!err) {\r\n                setData(decoded.userId);\r\n                setLoading(false);\r\n            }else\r\n            {\r\n                console.log(err);\r\n                const location = \"/Auth/Signin/?ref=tokenexpired&location=\"+window.location.href;\r\n                window.location.replace(location);\r\n            }\r\n        });\r\n        \r\n    },[])\r\n    if (loading) {\r\n        \r\n        return(\r\n        <>\r\n                <Head title=\"Loading\"/>\r\n                <div style={{position : 'fixed',top : '50%',left:'50%',marginTop :'-50px',marginLeft:'-50px'}}>\r\n                    <Spin size=\"large\" />\r\n                </div>\r\n        </>\r\n        )\r\n    }else{\r\n        return(\r\n            <div>\r\n                    {userid === profile._id &&(\r\n                        <MyProfile profile={profile}/>\r\n                    )}\r\n                    {userid !== profile._id &&(\r\n                        <PublicProfile profile={profile}/>\r\n                    )}\r\n            </div>\r\n        )        \r\n    }\r\n    \r\n}\r\n\r\n\r\nexport async function getStaticPaths(){\r\n    const res = await fetch(\"http://localhost:9000/profiles/\");\r\n    const data = await res.json();\r\n    var paths = [];\r\n    data.response.profiles.map(profile=>{\r\n        paths.push({params : {\r\n            _id : profile._id\r\n        }})\r\n    })\r\n    \r\n    return{\r\n        paths ,\r\n        fallback : false\r\n    }\r\n}\r\nexport async function getStaticProps({ params }){\r\n\r\n    const url = \"http://localhost:9000/profiles/profile?userid=\"+params._id ;\r\n    const res = await fetch(url);\r\n    const data = await res.json();\r\n    return{\r\n       props : {\r\n           data\r\n       }\r\n    }\r\n}\r\n\r\n\r\nexport default Profile ;"]},"metadata":{},"sourceType":"module"}