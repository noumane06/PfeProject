{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport Header from '../../components/header';\nimport Head from '../../components/head';\nimport Footer from '../../components/footer';\nimport './scss/tem.scss';\nimport TemCard from '../../components/Temoignages_Components/TemCard';\nimport { useEffect, useState } from 'react';\nimport { Skeleton, Modal, Button, notification } from 'antd';\nimport Axios from 'axios';\n\nconst Temoignages = props => {\n  const {\n    0: Data,\n    1: setData\n  } = useState();\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(true);\n  const {\n    0: id,\n    1: setUserID\n  } = useState(null);\n  const {\n    0: temoign,\n    1: setTemoign\n  } = useState(false);\n  const {\n    0: buttonLoading,\n    1: setbuttonLoading\n  } = useState(false);\n  const {\n    0: linkErr,\n    1: setLinkErr\n  } = useState(false);\n  const {\n    0: link,\n    1: setLink\n  } = useState('');\n  useEffect(() => {\n    console.log(props);\n    setData(props.data.data);\n    setLoading(false);\n  }, []);\n\n  function validVideoId(id) {\n    var img = new Image();\n    img.src = \"http://img.youtube.com/vi/\" + id + \"/mqdefault.jpg\";\n\n    img.onload = function () {\n      checkThumbnail(this.width);\n    };\n  }\n\n  function checkThumbnail(width) {\n    //HACK a mq thumbnail has width of 320.\n    //if the video does not exist(therefore thumbnail don't exist), a default thumbnail of 120 width is returned.\n    console.log(width);\n\n    if (width === 120) {\n      setLinkErr(true);\n      setbuttonLoading(false);\n    } else {\n      Axios.post(\"/api/temoin/\", {\n        link: link\n      }, {\n        withCredentials: true\n      }).then(res => {\n        notification['success']({\n          message: 'Succès',\n          description: 'Votre Témoignage a été ajouté avec succès '\n        });\n        setTimeout(() => {\n          setbuttonLoading(false);\n          setTemoign(false);\n          window.location.reload();\n        }, 2000);\n      }).catch(err => {\n        console.log(err);\n        notification['error']({\n          message: \"Une erreur s'est produite\",\n          description: 'Veuillez réessayer plus tard'\n        });\n        setTimeout(() => {\n          setbuttonLoading(false);\n          setTemoign(false);\n          window.location.reload();\n        }, 2000);\n      });\n    }\n  }\n\n  const handleClick = () => {\n    setbuttonLoading(true);\n    const check = link.split(\"v=\");\n\n    if (check[0] == \"https://www.youtube.com/watch?\" || check[0] == \"www.youtube.com/watch?\" || check[0] == \"youtube.com/watch?\") {\n      validVideoId(check[1]);\n    } else {\n      setLinkErr(true);\n      setbuttonLoading(false);\n    }\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"body\"\n  }, __jsx(\"div\", {\n    className: \"ContentInside\"\n  }, __jsx(Modal, {\n    title: \"T\\xE9moignage vid\\xE9o\",\n    visible: temoign,\n    width: \"60%\",\n    onCancel: () => setTemoign(false),\n    footer: [__jsx(Button, {\n      disabled: false,\n      key: \"submit\",\n      type: \"primary\",\n      loading: buttonLoading,\n      style: {\n        borderRadius: '10px',\n        fontFamily: 'GlacialBold'\n      },\n      onClick: handleClick\n    }, \"Termin\\xE9 !\")]\n  }, __jsx(\"label\", {\n    style: {\n      color: '#318CE7',\n      fontFamily: 'GlacialBold',\n      fontSize: '16px'\n    }\n  }, \"Ajoutez votre lien Youtube :\"), __jsx(\"br\", null), __jsx(\"input\", {\n    className: linkErr ? \"input error\" : \"input\",\n    type: \"text\",\n    placeholder: \"Ex : https://www.youtube.com/watch?v=5qap5aO4i9A \",\n    value: link,\n    onChange: e => {\n      setLink(e.target.value);\n      setLinkErr(false);\n    }\n  }), __jsx(\"br\", null), __jsx(\"label\", {\n    className: linkErr ? \"errMsg\" : \"hidden\"\n  }, \"Ce lien n'est pas valide, veuillez fournir un lien valide\"), __jsx(\"br\", null)), __jsx(Head, {\n    title: \"T\\xE9moignages | 6 solutions\"\n  }), __jsx(Header, {\n    active: \"temoignages\",\n    setUserID: setUserID\n  }), __jsx(\"div\", {\n    className: \"proposBody\"\n  }, __jsx(\"h1\", {\n    className: \"title\"\n  }, \"T\\xE9moignages\"), __jsx(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      alignItems: \"baseline\"\n    }\n  }, __jsx(\"div\", {\n    className: \"tems\"\n  }), id !== null && __jsx(\"div\", {\n    className: \"AddTem\"\n  }, __jsx(\"input\", {\n    className: \"TemButton\",\n    type: \"button\",\n    value: \"Ajouter un t\\xE9moignage\",\n    onClick: () => setTemoign(true)\n  }))), __jsx(Skeleton, {\n    loading: loading,\n    active: true,\n    avatar: true,\n    round: true,\n    className: \"sk\"\n  }, Data !== undefined && __jsx(\"div\", {\n    className: \"TemCards\"\n  }, Data.map(temData => __jsx(TemCard, {\n    key: temData.temid,\n    props: temData\n  }))))))), __jsx(Footer, null));\n};\n\nexport const getServerSideProps = async ctx => {\n  try {\n    const url = \"/api/temoin/\";\n    const res = await fetch(url);\n    const statusCode = res.status;\n    const data = await res.json();\n\n    if (statusCode !== 200) {\n      throw statusCode;\n    }\n\n    return {\n      props: {\n        data\n      }\n    };\n  } catch (error) {\n    ctx.res.statusCode = error;\n    return {\n      props: {\n        statusCode: error\n      }\n    };\n  }\n};\nexport default Temoignages;","map":{"version":3,"sources":["C:/Users/Noumane agouzil/Desktop/Normane/My projects/PfeProject/FrontEnd/pages/temoignages/index.jsx"],"names":["Header","Head","Footer","TemCard","useEffect","useState","Skeleton","Modal","Button","notification","Axios","Temoignages","props","Data","setData","loading","setLoading","id","setUserID","temoign","setTemoign","buttonLoading","setbuttonLoading","linkErr","setLinkErr","link","setLink","console","log","data","validVideoId","img","Image","src","onload","checkThumbnail","width","post","withCredentials","then","res","message","description","setTimeout","window","location","reload","catch","err","handleClick","check","split","borderRadius","fontFamily","color","fontSize","e","target","value","display","justifyContent","alignItems","undefined","map","temData","temid","getServerSideProps","ctx","url","fetch","statusCode","status","json","error"],"mappings":"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","sourcesContent":["import Header from '../../components/header';\r\nimport Head from '../../components/head';\r\nimport Footer from '../../components/footer';\r\nimport './scss/tem.scss';\r\nimport TemCard from '../../components/Temoignages_Components/TemCard';\r\nimport {useEffect , useState} from 'react';\r\nimport { Skeleton , Modal , Button, notification } from 'antd';\r\nimport Axios from 'axios';\r\n\r\n\r\n\r\n\r\n\r\nconst Temoignages = (props)=>{\r\n\r\n\r\n    const [Data,setData] = useState();\r\n    const [loading,setLoading] = useState(true);\r\n    const [id,setUserID]= useState(null);\r\n    const [temoign , setTemoign] = useState(false);\r\n    const [buttonLoading , setbuttonLoading] = useState(false);\r\n    const [linkErr,setLinkErr]=useState(false);\r\n    const [link , setLink] = useState('');\r\n    useEffect(()=>{\r\n            console.log(props);\r\n            setData(props.data.data);\r\n            setLoading(false);\r\n    },[]);\r\n    function validVideoId(id) {\r\n        var img = new Image();\r\n        img.src = \"http://img.youtube.com/vi/\" + id + \"/mqdefault.jpg\";\r\n        img.onload = function () {\r\n            checkThumbnail(this.width);\r\n        }\r\n    }\r\n    \r\n    function checkThumbnail(width) {\r\n        //HACK a mq thumbnail has width of 320.\r\n        //if the video does not exist(therefore thumbnail don't exist), a default thumbnail of 120 width is returned.\r\n        console.log(width)\r\n        if (width === 120) {\r\n            \r\n            setLinkErr(true);\r\n            setbuttonLoading(false);\r\n        }else{\r\n            Axios.post(\"/api/temoin/\",{link : link},{withCredentials : true})\r\n            .then(res =>{\r\n                notification['success']({\r\n                    message: 'Succès',\r\n                    description:'Votre Témoignage a été ajouté avec succès '\r\n                })\r\n                setTimeout(() => {\r\n                    setbuttonLoading(false);\r\n                    setTemoign(false);\r\n                    window.location.reload();\r\n                }, 2000);\r\n            })\r\n            .catch(err =>{\r\n                console.log(err);\r\n                notification['error']({\r\n                    message: \"Une erreur s'est produite\",\r\n                    description:'Veuillez réessayer plus tard'\r\n                })\r\n                setTimeout(() => {\r\n                    setbuttonLoading(false);\r\n                    setTemoign(false);\r\n                    window.location.reload();\r\n                }, 2000);\r\n            })\r\n        }\r\n    }\r\n    \r\n    const handleClick = ()=>{\r\n        setbuttonLoading(true);\r\n        const check = link.split(\"v=\");\r\n        if (check[0] == \"https://www.youtube.com/watch?\" || check[0] == \"www.youtube.com/watch?\" || check[0] == \"youtube.com/watch?\" ) {\r\n            validVideoId(check[1]);\r\n        }\r\n        else\r\n        {\r\n            setLinkErr(true);\r\n            setbuttonLoading(false);\r\n        }\r\n        \r\n    }\r\n    return (\r\n      <>\r\n        <div className=\"body\">\r\n          <div className=\"ContentInside\">\r\n            <Modal\r\n              title=\"Témoignage vidéo\"\r\n              visible={temoign}\r\n              width=\"60%\"\r\n              onCancel={() => setTemoign(false)}\r\n              footer={[\r\n                <Button disabled={false} key=\"submit\" type=\"primary\" loading={buttonLoading} style={{borderRadius :'10px', fontFamily :'GlacialBold'}}  onClick={handleClick}>\r\n                                Terminé !\r\n                </Button>\r\n              ]}\r\n            >\r\n            <label style={{color : '#318CE7' , fontFamily : 'GlacialBold' , fontSize : '16px'}}>Ajoutez votre lien Youtube :</label><br/>\r\n            <input className={linkErr ? \"input error\" : \"input\"} type=\"text\" placeholder=\"Ex : https://www.youtube.com/watch?v=5qap5aO4i9A \"  value={link} onChange={(e)=>{setLink(e.target.value);setLinkErr(false)}} /><br />\r\n            <label className={linkErr ? \"errMsg\" : \"hidden\"}>Ce lien n'est pas valide, veuillez fournir un lien valide</label><br />\r\n            </Modal>\r\n\r\n            <Head title=\"Témoignages | 6 solutions\" />\r\n            <Header active=\"temoignages\" setUserID={setUserID} />\r\n            <div className=\"proposBody\">\r\n              <h1 className=\"title\">Témoignages</h1>\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"space-between\",\r\n                  alignItems: \"baseline\",\r\n                }}\r\n              >\r\n                <div className=\"tems\"></div>\r\n                {id !== null && (\r\n                  <div className=\"AddTem\">\r\n                    <input\r\n                      className=\"TemButton\"\r\n                      type=\"button\"\r\n                      value=\"Ajouter un témoignage\"\r\n                      onClick={() => setTemoign(true)}\r\n                    />\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <Skeleton\r\n                loading={loading}\r\n                active={true}\r\n                avatar={true}\r\n                round\r\n                className=\"sk\"\r\n              >\r\n                {Data !== undefined && (\r\n                  <div className=\"TemCards\">\r\n                    {Data.map((temData) => (\r\n                      <TemCard key={temData.temid} props={temData} />\r\n                    ))}\r\n                  </div>\r\n                )}\r\n              </Skeleton>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Footer />\r\n      </>\r\n    );\r\n}\r\nexport const getServerSideProps = async (ctx) => {\r\n    try {\r\n        const url = \"/api/temoin/\" ;\r\n        const res = await fetch(url); \r\n        const statusCode = res.status;\r\n        const data = await res.json();\r\n        \r\n        if (statusCode !== 200) {\r\n            throw statusCode \r\n        }\r\n        return  {\r\n            props : {data }\r\n        }\r\n    } \r\n    catch (error) {\r\n        ctx.res.statusCode = error;\r\n        return {\r\n               props : {statusCode : error}\r\n        };\r\n    }   \r\n  }\r\nexport default Temoignages ;"]},"metadata":{},"sourceType":"module"}