{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from 'react';\nimport Header from '../../components/header';\nimport Head from '../../components/head';\nimport Footer from '../../components/footer';\nimport './Scss/search.scss';\nimport { useRouter } from 'next/router';\nimport { Skeleton } from 'antd';\nimport axios from 'axios'; // ------------------------------------------------\n\nimport SearchCard from '../../components/SearchCard';\nimport SearchBar from '../../components/SearchBar'; //--------------------------------------------------\n\nconst Search = ({\n  qu\n}) => {\n  const {\n    0: profiles,\n    1: setProfile\n  } = useState();\n  const {\n    0: nodata,\n    1: setnodata\n  } = useState(false);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(true);\n  const router = useRouter();\n  useEffect(() => {\n    const Url = 'http://localhost:9000/profiles/search?companyname=' + qu.companyname + '&domaine=' + qu.domaine + '&city=' + qu.city + '&page=' + qu.page;\n    axios.get(Url).then(res => {\n      console.log(res);\n      setProfile(res.data);\n\n      if (res.data === \"\") {\n        setnodata(true);\n      }\n\n      setLoading(false);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n\n  const handleCLick = async () => {\n    setLoading(true);\n\n    if (+qu.page < Math.round(profiles.count / 9) && +qu.page !== 0) {\n      var newPage = +qu.page + 1;\n      await router.push('/Search?companyname=' + qu.companyname + '&domaine=' + qu.domaine + '&city=' + qu.city + '&page=' + newPage);\n    }\n\n    const Url = 'http://localhost:9000/profiles/search?companyname=' + qu.companyname + '&domaine=' + qu.domaine + '&city=' + qu.city + '&page=' + qu.page;\n    axios.get(Url).then(res => {\n      setProfile(res.data);\n\n      if (res.data === \"\") {\n        setnodata(true);\n      }\n\n      setLoading(false);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const handleBack = () => {\n    setLoading(true);\n    var newPage = +qu.page - 1;\n    router.push('/Search?companyname=' + qu.companyname + '&domaine=' + qu.domaine + '&city=' + qu.city + '&page=' + newPage);\n    const Url = 'http://localhost:9000/profiles/search?companyname=' + qu.companyname + '&domaine=' + qu.domaine + '&city=' + qu.city + '&page=' + qu.page;\n    axios.get(Url).then(res => {\n      setProfile(res.data);\n\n      if (res.data === \"\") {\n        setnodata(true);\n      }\n\n      setLoading(false);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"body\"\n  }, __jsx(\"div\", {\n    className: \"ContentInside\"\n  }, __jsx(Head, {\n    title: \"Resulat de recherche | 6 solutions\"\n  }), __jsx(Header, null), __jsx(\"div\", {\n    className: \"searchPage\"\n  }, __jsx(SearchBar, {\n    searchItem: qu\n  })), __jsx(\"div\", {\n    className: \"loader\"\n  }, __jsx(Skeleton, {\n    loading: loading,\n    active: true,\n    avatar: true,\n    round: true,\n    className: \"sk\"\n  }, profiles !== undefined && __jsx(React.Fragment, null, profiles.profile !== undefined && __jsx(\"div\", {\n    className: \"CardContainer\"\n  }, profiles.profile.map(profile => __jsx(React.Fragment, null, __jsx(SearchCard, {\n    key: profile._id,\n    className: \"SearchCard1\",\n    profile: profile\n  })))), nodata && __jsx(\"div\", {\n    className: \"Noresults\"\n  }, __jsx(\"img\", {\n    src: \"/static/Assets/No_comments.png\",\n    height: \"300\"\n  }), __jsx(\"h2\", null, \"Aucun r\\xE9sultat trouv\\xE9\"), __jsx(\"p\", null, \"Il semble que nous ne trouvons aucun r\\xE9sultat bas\\xE9 sur la recherche.\")), __jsx(\"div\", {\n    className: \"pagination\"\n  }, __jsx(\"button\", {\n    className: qu.page <= 1 || profiles.count === undefined ? \"disabled test\" : \"backPage test\",\n    onClick: handleBack\n  }, \"Pr\\xE9c\\xE9dent\"), profiles.count !== undefined && __jsx(\"span\", {\n    className: \"pageNumber test \"\n  }, qu.page, \" sur \", Math.round(profiles.count / 9) !== 0 ? Math.round(profiles.count / 9) : 1), profiles.count === undefined && __jsx(\"span\", {\n    className: \"pageNumber test \"\n  }, \"-\"), __jsx(\"button\", {\n    className: qu.page >= Math.round(profiles.count / 9) || profiles.count === undefined ? \"disabled test \" : \"nextPage test \",\n    onClick: handleCLick\n  }, \"Suivant\"))))))), !loading && __jsx(Footer, null));\n};\n\nSearch.getInitialProps = async ({\n  query\n}) => {\n  return {\n    props: \"\",\n    qu: query\n  };\n};\n\nexport default Search;","map":null,"metadata":{},"sourceType":"module"}