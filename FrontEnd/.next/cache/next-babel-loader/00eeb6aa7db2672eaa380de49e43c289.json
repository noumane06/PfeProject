{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport Header from \"../../components/header\";\nimport Head from \"../../components/head\";\nimport Footer from \"../../components/footer\";\nimport { useState, useEffect } from 'react';\nimport { Spin } from 'antd';\nimport './Sass/notif.scss';\nimport NotifCard from \"../../components/Notifications_Components/NotifCard\";\nimport NotifBell from \"../../components/svg/NotifBell\";\nimport moment from 'moment';\n\nconst Notification = props => {\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(true);\n  const {\n    0: data,\n    1: setData\n  } = useState();\n  useEffect(() => {\n    if (props.statusCode === 401) {\n      const location = \"/Auth/Signin/?ref=tokenexpired&location=\" + window.location.href;\n      window.location.replace(location);\n    } else {\n      console.log(props.data.profile.Notification);\n      setData(props.data.profile);\n      setLoading(false);\n    }\n  }, []);\n  const Notifications = data === undefined ? '' : data.Notification;\n\n  if (Notifications !== '') {\n    Notifications.sort((el1, el2) => {\n      var a = moment(el1.date);\n      var b = moment(el2.date);\n      return b.diff(a);\n    });\n  }\n\n  if (loading) {\n    return __jsx(React.Fragment, null, __jsx(Head, {\n      title: \"Loading\"\n    }), __jsx(\"div\", {\n      style: {\n        position: 'fixed',\n        top: '50%',\n        left: '50%',\n        marginTop: '-50px',\n        marginLeft: '-50px'\n      }\n    }, __jsx(Spin, {\n      size: \"large\"\n    })));\n  } else {\n    return __jsx(React.Fragment, null, __jsx(\"div\", {\n      className: \"body\"\n    }, __jsx(Header, null), __jsx(Head, {\n      title: \"Notifications | 6Solutions\"\n    }), __jsx(\"div\", {\n      className: \"NotifBody\"\n    }, __jsx(\"div\", {\n      className: \"NotTitle\"\n    }, __jsx(\"span\", {\n      className: \"icon-button\"\n    }, __jsx(NotifBell, null)), __jsx(\"h1\", {\n      className: \"NotifHeader\"\n    }, \"Notifications\")), __jsx(\"div\", {\n      className: \"NotifContainer\"\n    }, Notifications.map(notif => moment(notif.day).isAfter(Date.now()) || moment(notif.day).isSame(Date.now(), 'day') ? __jsx(NotifCard, {\n      profile: data,\n      key: notif.SenderId,\n      notif: notif,\n      all: Notifications\n    }) : '')), Notifications.length === 0 && __jsx(\"div\", {\n      style: {\n        display: \"flex\",\n        alignItems: \"center\",\n        flexDirection: \"column\"\n      },\n      className: \"nonot\"\n    }, __jsx(\"img\", {\n      src: \"../../static/Assets/box.png\"\n    }), __jsx(\"div\", {\n      style: {\n        textAlign: \"center\"\n      }\n    }, __jsx(\"h2\", null, \"Pas encore de notifications\"), __jsx(\"p\", {\n      style: {\n        color: \"#24292E\"\n      }\n    }, \"Allez r\\xE9server des r\\xE9unions.\"))))), __jsx(Footer, null));\n  }\n};\n\nexport const getServerSideProps = async ctx => {\n  try {\n    const cookie = ctx.req.headers.cookie;\n    const url = \"/api/profiles/myprofile\";\n    const res = await fetch(url, {\n      headers: {\n        cookie\n      }\n    });\n    const statusCode = res.status;\n    const data = await res.json();\n\n    if (statusCode !== 200) {\n      throw statusCode;\n    }\n\n    return {\n      props: {\n        data\n      }\n    };\n  } catch (error) {\n    ctx.res.statusCode = error;\n    return {\n      props: {\n        statusCode: error\n      }\n    };\n  }\n};\nexport default Notification;","map":{"version":3,"sources":["C:/Users/Noumane agouzil/Desktop/Normane/My projects/PfeProject/FrontEnd/pages/Notifications/index.jsx"],"names":["Header","Head","Footer","useState","useEffect","Spin","NotifCard","NotifBell","moment","Notification","props","loading","setLoading","data","setData","statusCode","location","window","href","replace","console","log","profile","Notifications","undefined","sort","el1","el2","a","date","b","diff","position","top","left","marginTop","marginLeft","map","notif","day","isAfter","Date","now","isSame","SenderId","length","display","alignItems","flexDirection","textAlign","color","getServerSideProps","ctx","cookie","req","headers","url","res","fetch","status","json","error"],"mappings":"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","sourcesContent":["import Header from \"../../components/header\";\r\nimport Head from \"../../components/head\";\r\nimport Footer from \"../../components/footer\";\r\nimport {useState , useEffect} from 'react';\r\nimport {Spin } from 'antd';\r\nimport './Sass/notif.scss';\r\nimport NotifCard from \"../../components/Notifications_Components/NotifCard\";\r\nimport NotifBell from \"../../components/svg/NotifBell\";\r\nimport moment from 'moment';\r\nconst Notification = (props)=>{\r\n    \r\n    const [loading,setLoading] = useState(true);\r\n    const [data , setData] = useState()\r\n    useEffect(()=>{\r\n        if (props.statusCode === 401) {\r\n            const location = \"/Auth/Signin/?ref=tokenexpired&location=\"+window.location.href;\r\n            window.location.replace(location);\r\n        }else{\r\n            console.log(props.data.profile.Notification);\r\n            setData(props.data.profile);\r\n            setLoading(false); \r\n        }\r\n    },[])\r\n    const Notifications = data === undefined ? '' : data.Notification;\r\n    if (Notifications !== '') {\r\n        Notifications.sort((el1,el2)=>{\r\n            var a = moment(el1.date);\r\n            var b = moment(el2.date);\r\n            return b.diff(a);\r\n        });\r\n    }\r\n\r\n    if (loading ) {\r\n        \r\n        return(\r\n        <>\r\n                <Head title=\"Loading\"/>\r\n                <div style={{position : 'fixed',top : '50%',left:'50%',marginTop :'-50px',marginLeft:'-50px'}}>\r\n                    <Spin size=\"large\" />\r\n                </div>\r\n        </>\r\n        )\r\n    }else{\r\n        return(\r\n            <>\r\n            <div className=\"body\">\r\n                <Header/>\r\n                <Head title=\"Notifications | 6Solutions\"/>\r\n                <div className=\"NotifBody\">\r\n                    <div className=\"NotTitle\">\r\n                        <span className=\"icon-button\"><NotifBell/></span>\r\n                        <h1 className=\"NotifHeader\">Notifications</h1>\r\n                    </div>\r\n                    \r\n                    <div className=\"NotifContainer\">\r\n                        {Notifications.map(notif => moment(notif.day).isAfter(Date.now()) ||  moment(notif.day).isSame(Date.now(),'day') ? <NotifCard profile={data} key={notif.SenderId} notif={notif} all={Notifications}/> : '' )} \r\n                        \r\n                    </div>\r\n                    {Notifications.length === 0 &&(\r\n                        <div style={{display : \"flex\" , alignItems : \"center\" , flexDirection :\"column\"}} className=\"nonot\">\r\n                            {/* <EmptyInbox/> */}\r\n                            <img src='../../static/Assets/box.png'/>\r\n                            <div style={{textAlign:\"center\"}}>\r\n                                <h2>Pas encore de notifications</h2>\r\n                                <p style={{color : \"#24292E\"}}>Allez réserver des réunions.</p>\r\n                            </div>\r\n                            \r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n            <Footer/>\r\n            </>\r\n            \r\n        )\r\n    }\r\n    \r\n}\r\nexport const getServerSideProps = async (ctx) => {\r\n    try {\r\n        const cookie = ctx.req.headers.cookie ;\r\n        const url = \"/api/profiles/myprofile\" ;\r\n        const res = await fetch( url,{headers : {cookie}}); \r\n        const statusCode = res.status;\r\n        const data = await res.json();\r\n        \r\n        if (statusCode !== 200) {\r\n            throw statusCode \r\n        }\r\n        return  {\r\n            props : {data }\r\n        }\r\n    } \r\n    catch (error) {\r\n        ctx.res.statusCode = error;\r\n        return {\r\n               props : {statusCode : error}\r\n        };\r\n    }   \r\n}\r\nexport default Notification"]},"metadata":{},"sourceType":"module"}